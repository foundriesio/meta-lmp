# LMP specific configuration

# Beaglebone
PREFERRED_PROVIDER_virtual/bootloader_beaglebone-yocto = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_beaglebone-yocto = "u-boot-fio"
WKS_FILE_DEPENDS_append_beaglebone-yocto = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_beaglebone-yocto = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES_append_beaglebone-yocto = " ubootenv"
OSTREE_KERNEL_ARGS_beaglebone-yocto ?= "console=ttyS0,115200n8 ${OSTREE_KERNEL_ARGS_COMMON}"
KERNEL_DEVICETREE_append_beaglebone-yocto = " am335x-boneblack-wireless.dtb"
IMAGE_BOOT_FILES_beaglebone-yocto = "u-boot.img MLO boot.itb"
KERNEL_IMAGETYPE_beaglebone-yocto = "fitImage"
KERNEL_CLASSES_beaglebone-yocto = " kernel-lmp-fitimage "
## beaglebone-yocto.conf appends kernel-image-zimage by default
IMAGE_INSTALL_remove_beaglebone-yocto = "kernel-image-zimage"

# Raspberry Pi
KERNEL_BUILTIN_WIREGUARD_rpi = "1"
PREFERRED_PROVIDER_virtual/kernel_rpi ?= "linux-lmp-rpi"
PREFERRED_PROVIDER_virtual/bootloader_rpi = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_rpi = "u-boot-fio"
SOTA_CLIENT_FEATURES_append_rpi = " ubootenv"
WKS_FILE_DEPENDS_BOOTLOADERS_rpi = "virtual/bootloader"
WKS_FILE_DEPENDS_append_rpi = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_rpi = "u-boot-ostree-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_rpi = "u-boot-ostree-scr-fit"
PREFERRED_PROVIDER_virtual/dtb_rpi ?= "lmp-device-tree"
IMAGE_FSTYPES_remove_rpi = "ext3 rpi-sdimg"
IMAGE_BOOT_FILES_rpi = "${BOOTFILES_DIR_NAME}/* u-boot.bin;${SDIMG_KERNELIMAGE} ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_rpi = "${BOOTFILES_DIR_NAME}/* u-boot.bin;${SDIMG_KERNELIMAGE} ${@make_dtb_boot_files(d)} boot.itb"
KERNEL_CLASSES_sota_rpi = " kernel-lmp-fitimage "
KERNEL_IMAGETYPE_sota_rpi = "fitImage"
## Workaround for https://github.com/raspberrypi/firmware/issues/1483
ENABLE_UART_rpi = "1"
## Mimic meta-raspberrypi behavior
KERNEL_SERIAL_rpi ?= "${@oe.utils.conditional("ENABLE_UART", "1", "console=ttyS0,115200", "", d)}"
KERNEL_SERIAL_raspberrypi-cm3 ?= "console=ttyAMA0,115200"
OSTREE_KERNEL_ARGS_COMMON_RPI ?= "coherent_pool=1M 8250.nr_uarts=1 console=tty1 cgroup_enable=memory ${KERNEL_SERIAL} ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS_raspberrypi3 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
OSTREE_KERNEL_ARGS_raspberrypi-cm3 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
OSTREE_KERNEL_ARGS_raspberrypi4 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
## U-Boot entrypoints for rpi
UBOOT_ENTRYPOINT_rpi = "0x00200000"
UBOOT_DTB_LOADADDRESS_rpi = "0x02600000"
UBOOT_DTBO_LOADADDRESS_rpi = "0x026d0000"
## Rpi 4/CM4
MACHINE_EXTRA_RRECOMMENDS_append_raspberrypi4 = " linux-firmware-rpidistro-bcm43456"

# RISC-V targets
PREFERRED_PROVIDER_virtual/bootloader_qemuriscv64 = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_qemuriscv64 = "u-boot-fio"
IMAGE_BOOT_FILES_qemuriscv64 = "boot.itb"
KERNEL_IMAGETYPE_qemuriscv64 = "fitImage"
WKS_FILE_DEPENDS_append_qemuriscv64 = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_qemuriscv64 = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES_append_qemuriscv64 = " ubootenv"
KERNEL_IMAGETYPES_remove_qemuriscv64 = "uImage"
KERNEL_CLASSES_qemuriscv64 = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_qemuriscv64 ?= "earlycon=sbi ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT_qemuriscv64 = "0x80400000"
RISCV_SBI_PAYLOAD_qemuriscv64 = "u-boot.bin"
QB_DEFAULT_BIOS_qemuriscv64 = "fw_payload.elf"
QB_DRIVE_TYPE_qemuriscv64 = "/dev/vdb"
QB_OPT_APPEND_append_qemuriscv64 = " -bios ${DEPLOY_DIR_IMAGE}/fw_payload.elf"

## Freedom U540
PREFERRED_PROVIDER_virtual/bootloader_freedom-u540 = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_freedom-u540 = "u-boot-fio"
SPL_BINARY_freedom-u540 = "spl/u-boot-spl.bin"
UBOOT_SUFFIX_freedom-u540 ?= "itb"
KERNEL_CLASSES_freedom-u540 = " kernel-lmp-fitimage "
UBOOT_ENV_freedom-u540 = ""
RISCV_SBI_PAYLOAD_freedom-u540 = ""
IMAGE_BOOT_FILES_freedom-u540 = "fitImage boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_freedom-u540 = "boot.itb"
WKS_FILE_DEPENDS_append_freedom-u540 = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_freedom-u540 = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_freedom-u540 = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES_append_freedom-u540 = " ubootenv"
OSTREE_KERNEL_ARGS_freedom-u540 ?= "earlycon=sbi console=ttySIF0 ${OSTREE_KERNEL_ARGS_COMMON}"
WKS_FILE_freedom-u540 = "sdimage-freedom-u540-spl.wks"
WKS_FILE_freedom-u540_sota = "sdimage-freedom-u540-spl-sota.wks"

# ARM Development Boards
PREFERRED_PROVIDER_virtual/kernel_corstone700 = "linux-lmp-lts"
PREFERRED_PROVIDER_virtual/bootloader_corstone700 = "u-boot"
PREFERRED_PROVIDER_u-boot_corstone700 = "u-boot"
KERNEL_IMAGETYPE_corstone700 = "xipImage"
WKS_FILE_corstone700_sota = "corstone700-sota.wks"
IMAGE_CLASSES_append_corstone700 = " image-types-wicnopt"
IMAGE_FSTYPES_append_corstone700 = " wic.nopt"
## Remove udev/e2fsck due size restrictions (max 2 mb)
PACKAGE_INSTALL_remove_pn-initramfs-ostree-lmp-image_corstone700 = "initramfs-module-udev udev e2fsprogs-e2fsck"
## Corstone700-MPS3 does not have support for VFP and NEON
TUNE_FEATURES_tune-cortexa32_remove_corstone700-mps3 = "callconvention-hard neon"
PACKAGE_EXTRA_ARCHS_tune-cortexa32_remove_corstone700-mps3 = "cortexa32hf-neon"
PACKAGE_EXTRA_ARCHS_tune-cortexa32-crypto_remove_corstone700-mps3 = "cortexa32hf-neon cortexa32hf-neon-crypto"

# QEMU ARM
PREFERRED_PROVIDER_virtual/bootloader_qemuarm64 = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_qemuarm64 = "u-boot-fio"
WKS_FILE_DEPENDS_append_qemuarm64 = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_qemuarm64 = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES_append_qemuarm64 = " ubootenv"
IMAGE_BOOT_FILES_qemuarm64 = "boot.itb"
KERNEL_IMAGETYPE_qemuarm64 = "fitImage"
KERNEL_CLASSES_qemuarm64 = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_qemuarm64 ?= "console=ttyAMA0 ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT_qemuarm64 = "0x40080000"
MACHINE_FEATURES_append_qemuarm64-secureboot = " optee"
## Use same minimal memory amount as suggested by op-tee
QB_MEM_qemuarm64-secureboot = "-m 1057"
QB_DRIVE_TYPE_qemuarm64-secureboot = "/dev/vdb"
## EBBR / SystemReady
KERNEL_IMAGETYPE_qemuarm64-secureboot-ebbr ?= "Image"
KERNEL_CLASSES_qemuarm64-secureboot-ebbr ?= ""
EFI_PROVIDER_qemuarm64-secureboot-ebbr ?= "grub-efi"
OSTREE_BOOTLOADER_qemuarm64-secureboot-ebbr ?= "grub"
IMAGE_BOOT_FILES_qemuarm64-secureboot-ebbr = ""
WKS_FILE_qemuarm64-secureboot-ebbr_sota ?= "efidisk-sota.wks"

# QEMU ARM
PREFERRED_PROVIDER_virtual/bootloader_qemuarm = "u-boot-fio"
PREFERRED_PROVIDER_u-boot_qemuarm = "u-boot-fio"
WKS_FILE_DEPENDS_append_qemuarm = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_qemuarm = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES_append_qemuarm = " ubootenv"
IMAGE_BOOT_FILES_qemuarm = "boot.itb"
KERNEL_IMAGETYPE_qemuarm = "fitImage"
KERNEL_CLASSES_qemuarm = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_qemuarm ?= "console=ttyAMA0 ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT_qemuarm = "0x40080000"
QB_DRIVE_TYPE_qemuarm = "/dev/vdb"
## Currently support u-boot -> Linux boot
## will add more security later
QB_OPT_APPEND_qemuarm = "-no-acpi -bios ${DEPLOY_DIR_IMAGE}/u-boot.bin -d unimp"

# ARM64 Generic (SystemReady)
OSTREE_BOOTLOADER_generic-arm64 ?= "grub"
MACHINE_FEATURES_append_generic-arm64 = " acpi pci usbhost"
EFI_PROVIDER_generic-arm64 ?= "grub-efi"
WKS_FILE_generic-arm64_sota ?= "image-efi-installer.wks.in"
WKS_FILE_DEPENDS_append_generic-arm64 = " ${INITRD_IMAGE_LIVE}"
## wic-based installer requires image to be available via IMAGE_BOOT_FILES
IMAGE_BOOT_FILES_generic-arm64 = "${@bb.utils.contains('WKS_FILE', 'image-efi-installer.wks.in', 'grub-efi-bootaa64.efi;EFI/BOOT/bootaa64.efi ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}.ota-ext4;rootfs.img', '', d)}"

# ARM N1SDP
PREFERRED_PROVIDER_virtual/kernel_n1sdp = "linux-lmp-lts"
OSTREE_BOOTLOADER_n1sdp ?= "grub"
OSTREE_KERNEL_ARGS_n1sdp ?= "earlycon=pl011,0x2A400000 console=ttyAMA0,115200 acpi=force ${OSTREE_KERNEL_ARGS_COMMON}"
MACHINE_FEATURES_append_n1sdp = " acpi pci usbhost"
WKS_FILE_n1sdp_sota ?= "efidisk-sota.wks"
WKS_FILE_DEPENDS_append_n1sdp = " ${INITRD_IMAGE_LIVE}"
APPEND_n1sdp_append = " console=ttyAMA0,115200 acpi=force"
## wic-based installer requires image to be available via IMAGE_BOOT_FILES
IMAGE_BOOT_FILES_n1sdp = "${@bb.utils.contains('WKS_FILE', 'image-efi-installer.wks.in', 'grub-efi-bootaa64.efi;EFI/BOOT/bootaa64.efi startup.nsh ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}.ota-ext4;rootfs.img', '', d)}"

# Intel
OSTREE_BOOTLOADER_intel-corei7-64 ?= "grub"
OSTREE_KERNEL_ARGS_intel-corei7-64 ?= "console=ttyS0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
EFI_PROVIDER_intel-corei7-64 = "grub-efi"
WKS_FILE_intel-corei7-64_sota ?= "efidisk-sota.wks"
WKS_FILE_DEPENDS_append_intel-corei7-64 = " ${INITRD_IMAGE_LIVE}"
## wic-based installer requires image to be available via IMAGE_BOOT_FILES
IMAGE_BOOT_FILES_intel-corei7-64 = "${@bb.utils.contains('WKS_FILE', 'image-efi-installer.wks.in', 'grub-efi-bootx64.efi;EFI/BOOT/bootx64.efi startup.nsh ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}.ota-ext4;rootfs.img', '', d)}"

# Common for iMX targets
## Prefer IMX_DEFAULT_BSP=nxp as mainline removes every common machine override
IMX_DEFAULT_BSP = "nxp"
OSTREE_KERNEL_ARGS_mx6 ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS_mx6ull ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS_mx7d ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS_mx7ulp ?= "console=tty1 console=ttyLP0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"

# Toradex Colibri iMX7 eMMC
PREFERRED_PROVIDER_u-boot-default-script_colibri-imx7-emmc = "u-boot-ostree-scr"
IMX_DEFAULT_BOOTLOADER_colibri-imx7-emmc ?= "u-boot-fio"
IMAGE_BOOT_FILES_colibri-imx7-emmc = "uEnv.txt u-boot.imx"
KERNEL_IMAGETYPE_colibri-imx7-emmc = "fitImage"
KERNEL_CLASSES_colibri-imx7-emmc = " kernel-lmp-fitimage "
UBOOT_ENTRYPOINT_colibri-imx7-emmc = "0x81000000"
UBOOT_DTB_LOADADDRESS_colibri-imx7-emmc = "0x82000000"
UBOOT_RD_LOADADDRESS_colibri-imx7-emmc = "0x82100000"

# Embedded Artists i.MX7ULP COM
UBOOT_SIGN_ENABLE_sota_imx7ulpea-ucom = "1"
PREFERRED_PROVIDER_u-boot-default-script_imx7ulpea-ucom = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_imx7ulpea-ucom = "u-boot-ostree-scr-fit"
LMP_BOOT_FIRMWARE_imx7ulpea-ucom = "SPL u-boot.itb"
IMAGE_BOOT_FILES_imx7ulpea-ucom = "boot.scr uEnv.txt zImage ${@make_dtb_boot_files(d)}"
IMAGE_BOOT_FILES_sota_imx7ulpea-ucom = "boot.itb"
KERNEL_IMAGETYPE_sota_imx7ulpea-ucom = "fitImage"
KERNEL_CLASSES_sota_imx7ulpea-ucom = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_COMMON_imx7ulpea-ucom ?= "earlycon root=/dev/mmcblk0p2 rootfstype=ext4"
SOTA_CLIENT_FEATURES_append_imx7ulpea-ucom = " ubootenv"
UBOOT_CLASSES_imx7ulpea-ucom = "uboot-fitimage"
BOOTSCR_LOAD_ADDR_imx7ulpea-ucom = "0x60800000"
UBOOT_MACHINE_imx7ulpea-ucom = "mx7ulp_com_defconfig"
UBOOT_CONFIG_imx7ulpea-ucom = ""
PREFERRED_VERSION_optee-os-fio_imx7ulpea-ucom = "3.10.0+git"
PREFERRED_VERSION_optee-client_imx7ulpea-ucom = "3.10.0"
PREFERRED_VERSION_optee-examples_imx7ulpea-ucom = "3.10.0"
PREFERRED_VERSION_optee-test_imx7ulpea-ucom = "3.10.0"

# iMX6UL
UBOOT_SIGN_ENABLE_sota_mx6ul = "1"
PREFERRED_PROVIDER_virtual/kernel_mx6ul ?= "linux-lmp-fslc-imx"
IMX_DEFAULT_BOOTLOADER_mx6ul ?= "u-boot-fio"
WKS_FILE_DEPENDS_append_mx6ul = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx6ul = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx6ul = "u-boot-ostree-scr-fit"
SPL_BINARY_mx6ul = "SPL"
UBOOT_CLASSES_mx6ul = "uboot-fitimage"
UBOOT_CONFIG_mx6ul = ""
UBOOT_SUFFIX_mx6ul = "bin"
UBOOT_MAKE_TARGET_mx6ul = ""
UBOOT_DTB_LOADADDRESS_mx6ul = "0x85800000"
UBOOT_RD_LOADADDRESS_mx6ul = "0x84000000"
MACHINE_FEATURES_append_mx6ul = " optee"
LMP_BOOT_FIRMWARE_FILES_mx6ul = "SPL u-boot.itb"
IMAGE_BOOT_FILES_sota_mx6ul = " boot.itb"
IMAGE_BOOT_FILES_mx6ul = " boot.scr uEnv.txt zImage"
KERNEL_IMAGETYPE_sota_mx6ul = "fitImage"
KERNEL_CLASSES_sota_mx6ul = " kernel-lmp-fitimage "
WKS_FILE_mx6ul_sota = "sdimage-imx6-spl-fit-sota.wks"
# iMX6UL EVK
SOTA_CLIENT_FEATURES_append_imx6ulevk = " ubootenv"
UBOOT_MACHINE_imx6ulevk = "mx6ul_14x14_evk_defconfig"
KERNEL_DEVICETREE_imx6ulevk = "imx6ul-14x14-evk.dtb"
BOOTSCR_LOAD_ADDR_imx6ulevk = "0x85000000"

# iMX6ULL
UBOOT_SIGN_ENABLE_sota_mx6ull = "1"
PREFERRED_PROVIDER_virtual/kernel_mx6ull ?= "linux-lmp-fslc-imx"
IMX_DEFAULT_BOOTLOADER_mx6ull ?= "u-boot-fio"
WKS_FILE_DEPENDS_append_mx6ull = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx6ull = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx6ull = "u-boot-ostree-scr-fit"
SPL_BINARY_mx6ull = "SPL"
UBOOT_CLASSES_mx6ull = "uboot-fitimage"
UBOOT_CONFIG_mx6ull = ""
UBOOT_SUFFIX_mx6ull = "bin"
UBOOT_MAKE_TARGET_mx6ull = ""
UBOOT_DTB_LOADADDRESS_mx6ull = "0x85800000"
UBOOT_RD_LOADADDRESS_mx6ull = "0x84000000"
MACHINE_FEATURES_append_mx6ull = " optee"
LMP_BOOT_FIRMWARE_FILES_mx6ull = "SPL u-boot.itb"
IMAGE_BOOT_FILES_sota_mx6ull = " boot.itb"
IMAGE_BOOT_FILES_mx6ull = " boot.scr uEnv.txt zImage"
KERNEL_IMAGETYPE_sota_mx6ull = "fitImage"
KERNEL_CLASSES_sota_mx6ull = " kernel-lmp-fitimage "
WKS_FILE_mx6ull_sota = "sdimage-imx6-spl-fit-sota.wks"
# iMX6ULL EVK
SOTA_CLIENT_FEATURES_append_imx6ullevk = " ubootenv"
UBOOT_MACHINE_imx6ullevk = "mx6ull_14x14_evk_defconfig"
KERNEL_DEVICETREE_imx6ullevk = "imx6ull-14x14-evk.dtb"
BOOTSCR_LOAD_ADDR_imx6ullevk = "0x85000000"

# Toradex Apalis iMX6
UBOOT_SIGN_ENABLE_sota_apalis-imx6 = "1"
PREFERRED_PROVIDER_u-boot-default-script_apalis-imx6 = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_apalis-imx6 = "u-boot-ostree-scr-fit"
LMP_BOOT_FIRMWARE_FILES_apalis-imx6 = "SPL u-boot.itb"
IMAGE_BOOT_FILES_apalis-imx6 = "boot.scr uEnv.txt SPL u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)}"
IMAGE_BOOT_FILES_remove_apalis-imx6 = "boot.scr-${MACHINE};boot.scr"
IMAGE_BOOT_FILES_sota_apalis-imx6 = "boot.itb"
KERNEL_IMAGETYPE_sota_apalis-imx6 = "fitImage"
KERNEL_CLASSES_sota_apalis-imx6 = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_apalis-imx6 ?= "console=tty1 console=ttymxc0,115200 root=/dev/mmcblk2p2 rootfstype=ext4"
PREFERRED_PROVIDER_virtual/kernel_apalis-imx6 ?= "linux-lmp"
IMX_DEFAULT_BOOTLOADER_apalis-imx6 ?= "u-boot-fio"
SOTA_CLIENT_FEATURES_append_apalis-imx6 = " ubootenv"
UBOOT_CONFIG_apalis-imx6 = ""
UBOOT_SUFFIX_apalis-imx6 = "bin"
UBOOT_MACHINE_apalis-imx6 = "apalis_imx6_defconfig"
UBOOT_CLASSES_apalis-imx6 = "uboot-fitimage"
UBOOT_DTB_LOADADDRESS_apalis-imx6 = "0x15800000"
UBOOT_RD_LOADADDRESS_apalis-imx6 = "0x14000000"
WKS_FILE_apalis-imx6 = "sdimage-imx6dq-spl-fit.wks"
WKS_FILES_sota_apalis-imx6 = "sdimage-imx6dq-spl-fit-sota.wks"
MACHINE_FEATURES_append_apalis-imx6 = " optee"
BOOTSCR_LOAD_ADDR_apalis-imx6 = "0x15000000"
PREFERRED_VERSION_optee-os-fio_apalis-imx6 = "3.10.0+git"
PREFERRED_VERSION_optee-client_apalis-imx6 = "3.10.0"
PREFERRED_VERSION_optee-examples_apalis-imx6 = "3.10.0"
PREFERRED_VERSION_optee-test_apalis-imx6 = "3.10.0"

# Toradex Apalis iMX6 with secure boot support
SOTA_CLIENT_FEATURES_remove_sota_apalis-imx6-sec = "ubootenv"
SOTA_EXTRA_CLIENT_FEATURES_append_sota_apalis-imx6-sec = " fiovb"

# iMX8QM
SOTA_CLIENT_FEATURES_append_mx8qm = " ubootenv"
IMAGE_BOOT_FILES_mx8qm = "imx-boot u-boot.itb hdmitxfw.bin ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_mx8qm = "imx-boot u-boot.itb"
LMP_BOOT_FIRMWARE_FILES_mx8qm = "imx-boot u-boot.itb"
BOOTSCR_LOAD_ADDR_mx8qm = "0x83100000"
KERNEL_IMAGETYPE_sota_mx8qm = "fitImage"
KERNEL_CLASSES_sota_mx8qm = " kernel-lmp-fitimage "
FIT_LOADABLES_mx8qm ?= "hdmitxfw.bin"
WKS_FILE_mx8qm_sota = "sdimage-imx8-sota.wks.in"
IMX_DEFAULT_BOOTLOADER_mx8qm ?= "u-boot-fio"
WKS_FILE_DEPENDS_append_mx8qm = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx8qm = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx8qm = "u-boot-ostree-scr-fit"
UBOOT_CLASSES_mx8qm = "uboot-fitimage"
IMXBOOT_TARGETS_mx8qm = "flash_evk_spl"
ATF_BINARY_mx8qm = "arm-trusted-firmware.bin"
EXTRA_IMAGEDEPENDS_append_mx8qm = "virtual/trusted-firmware-a"
UBOOT_ENTRYPOINT_mx8qm = "0x80280000"
UBOOT_LOADADDRESS_mx8qm = "0x80280000"
UBOOT_DTB_LOADADDRESS_mx8qm = "0x83000000"
UBOOT_SIGN_ENABLE_sota_mx8qm = "1"
## iMX8QM MEK
OSTREE_KERNEL_ARGS_imx8qm-mek ?= "pci=nomsi console=ttyLP0,115200 earlycon ${OSTREE_KERNEL_ARGS_COMMON}"
PREFERRED_PROVIDER_virtual/kernel_imx8qm-mek ?= "linux-imx"
KERNEL_DANGLING_FEATURES_WARN_ONLY_imx8qm-mek ?= "1"
UBOOT_CONFIG_imx8qm-mek = ""
UBOOT_SUFFIX_imx8qm-mek = "bin"
UBOOT_MACHINE_imx8qm-mek = "imx8qm_mek_defconfig"
UBOOT_DTB_NAME ?= "fsl-imx8qm-mek.dtb"
## Toradex Apalis iMX8QM
OSTREE_KERNEL_ARGS_apalis-imx8 ?= "pci=nomsi console=tty1 console=ttyLP1,115200 earlycon ${OSTREE_KERNEL_ARGS_COMMON}"
PREFERRED_PROVIDER_virtual/kernel_apalis-imx8 ?= "linux-lmp-toradex-imx"
UBOOT_CONFIG_apalis-imx8 = ""
UBOOT_SUFFIX_apalis-imx8 = "bin"
UBOOT_MACHINE_apalis-imx8 = "apalis-imx8_defconfig"

# iMX8MQ
UBOOT_SIGN_ENABLE_sota_mx8mq = "1"
IMX_DEFAULT_BOOTLOADER_mx8mq ?= "u-boot-fio"
UBOOT_DTB_LOADADDRESS_mx8mq = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a_mx8mq ?= "imx-atf"
EXTRA_IMAGEDEPENDS_append_mx8mq = "virtual/trusted-firmware-a"
UBOOT_CLASSES_mx8mq = "uboot-fitimage"
ATF_BINARY_mx8mq = "arm-trusted-firmware.bin"
UBOOT_CONFIG_mx8mq = ""
LMP_BOOT_FIRMWARE_FILES_mx8mq = "imx-boot imx-boot-nohdmi u-boot.itb"
IMAGE_BOOT_FILES_mx8mq = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_mx8mq = "imx-boot u-boot.itb boot.itb"
WKS_FILE_DEPENDS_append_mx8mq = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx8mq = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx8mq = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE_sota_mx8mq = "fitImage"
KERNEL_CLASSES_sota_mx8mq = " kernel-lmp-fitimage "
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel_mx8mq ?= "linux-lmp-fslc-imx"
WKS_FILE_sota_mx8mq = "sdimage-imx8-spl-sota.wks.in"
IMXBOOT_TARGETS_mx8mq = "flash_evk_spl"
## iMX8MQ EVK
KMACHINE_imx8mq-evk = "imx8mqevk"
OSTREE_KERNEL_ARGS_imx8mq-evk ?= "console=tty1 console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200 root=/dev/mmcblk0p2 rootfstype=ext4"
SOTA_CLIENT_FEATURES_append_imx8mq-evk = " ubootenv"
MACHINE_FEATURES_remove_imx8mq-evk = "qca6174"
MACHINE_FEATURES_append_imx8mq-evk = " bcm4356"
UBOOT_MACHINE_imx8mq-evk ?= "imx8mq_evk_config"
BOOTSCR_LOAD_ADDR_imx8mq-evk = "0x44800000"

# iMX8MM
UBOOT_SIGN_ENABLE_sota_mx8mm = "1"
IMX_DEFAULT_BOOTLOADER_mx8mm ?= "u-boot-fio"
UBOOT_DTB_LOADADDRESS_mx8mm = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a_mx8mm ?= "imx-atf"
EXTRA_IMAGEDEPENDS_append_mx8mm = "virtual/trusted-firmware-a"
UBOOT_CLASSES_mx8mm = "uboot-fitimage"
ATF_BINARY_mx8mm = "arm-trusted-firmware.bin"
UBOOT_CONFIG_mx8mm = ""
LMP_BOOT_FIRMWARE_FILES_mx8mm = "imx-boot u-boot.itb"
IMAGE_BOOT_FILES_mx8mm = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_mx8mm = "boot.itb"
WKS_FILE_DEPENDS_append_mx8mm = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx8mm = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx8mm = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE_sota_mx8mm = "fitImage"
KERNEL_CLASSES_sota_mx8mm = " kernel-lmp-fitimage "
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel_mx8mm ?= "linux-lmp-fslc-imx"
MACHINE_FIRMWARE_mx8mm = "linux-firmware-imx-sdma-imx7d"
WKS_FILE_sota_mx8mm = "sdimage-imx8-spl-sota.wks.in"
IMXBOOT_TARGETS_mx8mm = "flash_evk_spl"
## iMX8MM EVK
KERNEL_DEVICETREE_append_imx8mm-lpddr4-evk = " freescale/imx8mm-evkb.dtb"
KMACHINE_imx8mm-lpddr4-evk = "imx8mmevk"
OSTREE_KERNEL_ARGS_imx8mm-lpddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 root=/dev/mmcblk2p2 rootfstype=ext4"
PREFERRED_PROVIDER_virtual/dtb_imx8mm-lpddr4-evk ?= "lmp-device-tree"
SOTA_CLIENT_FEATURES_append_imx8mm-lpddr4-evk = " ubootenv"
MACHINE_FEATURES_remove_imx8mm-lpddr4-evk = "qca9377 qca6174"
UBOOT_MACHINE_imx8mm-lpddr4-evk = "imx8mm_evk_config"
BOOTSCR_LOAD_ADDR_imx8mm-lpddr4-evk = "0x44800000"
## iMX8MM EVK with secure boot support
SOTA_CLIENT_FEATURES_remove_sota_imx8mm-lpddr4-evk-sec = "ubootenv"
SOTA_EXTRA_CLIENT_FEATURES_append_sota_imx8mm-lpddr4-evk-sec = " fiovb"
# iMX8MM EVKB revision
MACHINE_FEATURES_append_imx8mm-lpddr4-evk = " nxp8987 mxm-mwifiex-load"

# iMX8MP
UBOOT_SIGN_ENABLE_sota_mx8mp = "1"
IMX_DEFAULT_BOOTLOADER_mx8mp ?= "u-boot-fio"
UBOOT_DTB_LOADADDRESS_mx8mp = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a_mx8mp ?= "imx-atf"
EXTRA_IMAGEDEPENDS_append_mx8mp = "virtual/trusted-firmware-a"
UBOOT_CLASSES_mx8mp = "uboot-fitimage"
ATF_BINARY_mx8mp = "arm-trusted-firmware.bin"
UBOOT_CONFIG_mx8mp = ""
LMP_BOOT_FIRMWARE_FILES_mx8mp = "imx-boot u-boot.itb"
IMAGE_BOOT_FILES_mx8mp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES_sota_mx8mp = "boot.itb"
WKS_FILE_DEPENDS_append_mx8mp = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_mx8mp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script_sota_mx8mp = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE_sota_mx8mp = "fitImage"
KERNEL_CLASSES_sota_mx8mp = " kernel-lmp-fitimage "
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel_mx8mp ?= "linux-lmp-fslc-imx"
MACHINE_FIRMWARE_mx8mp = "linux-firmware-imx-sdma-imx7d"
WKS_FILE_sota_mx8mp = "sdimage-imx8-spl-sota.wks.in"
IMXBOOT_TARGETS_mx8mp = "flash_evk_spl"
## iMX8MP EVK
OSTREE_KERNEL_ARGS_imx8mp-lpddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 root=/dev/mmcblk2p2 rootfstype=ext4"
SOTA_CLIENT_FEATURES_append_imx8mp-lpddr4-evk = " ubootenv"
UBOOT_MACHINE_imx8mp-lpddr4-evk = "imx8mp_evk_config"
BOOTSCR_LOAD_ADDR_imx8mp-lpddr4-evk = "0x44800000"

# STM32MP1
PREFERRED_PROVIDER_virtual/kernel_stm32mp1common ?= "linux-lmp-stm32"
KERNEL_IMAGETYPE_stm32mp1common = "fitImage"
KERNEL_CLASSES_stm32mp1common = " kernel-lmp-fitimage "
OSTREE_KERNEL_stm32mp1common = "${KERNEL_IMAGETYPE}-${INITRAMFS_IMAGE}-${MACHINE}-${MACHINE}"
OSTREE_KERNEL_ARGS_COMMON_stm32mp1common = "console=ttySTM0,115200 root=LABEL=otaroot rootfstype=ext4"
SERIAL_CONSOLES_stm32mp1common = "115200;ttySTM0"
PREFERRED_VERSION_gcc-arm-none-eabi-native_stm32mp1common = "9"
IMAGE_CLASSES_remove_stm32mp1common = "st-partitions-image"
IMAGE_CLASSES_remove_stm32mp1common = "image_types-stubi"
ENABLE_FLASHLAYOUT_CONFIG_stm32mp1common = "0"
IMAGE_ROOTFS_MAXSIZE_stm32mp1common = ""
KERNEL_BUILTIN_WIREGUARD_stm32mp1common = "1"
## STM32MP1-EVAL
IMAGE_FSTYPES_remove_stm32mp1-eval = "wic wic.gz wic.bmap"
EXTRA_IMAGEDEPENDS_append_stm32mp1-eval = "flashlayouts-stm32mp1"
UBOOT_LOADADDRESS_stm32mp1-eval = "0xC2000000"
UBOOT_ENTRYPOINT_stm32mp1-eval = "0xC2000000"
UBOOT_DTB_LOADADDRESS_stm32mp1-eval = "0xC4000000"
UBOOT_RD_LOADADDRESS_stm32mp1-eval = "0xC4400000"
UBOOT_RD_ENTRYPOINT_stm32mp1-eval = "0xC4400000"
LMP_FLASHLAYOUT_stm32mp1-eval = "FlashLayout_emmc_stm32mp157a-ev1-trusted.tsv"
## STM32MP1-DISCO
ST_BOOTFS_stm32mp1-disco = "0"
ST_VENDORFS_stm32mp1-disco = "0"
ST_USERFS_stm32mp1-disco = "0"
M4_INSTALLDIR_stm32mp1-disco = "${prefix}"
SOTA_CLIENT_FEATURES_append_stm32mp1-disco = " ubootenv"
UBOOT_LOADADDRESS_stm32mp1-disco = "0xC2000000"
UBOOT_ENTRYPOINT_stm32mp1-disco = "0xC2000000"
UBOOT_DTB_LOADADDRESS_stm32mp1-disco = "0xC4000000"
IMAGE_BOOT_FILES_stm32mp1-disco = "boot.itb"
EXTRA_IMAGEDEPENDS_remove_stm32mp1-disco = "sdcard-raw-tools-native"
WKS_FILE_DEPENDS_append_stm32mp1-disco = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_stm32mp1-disco = "u-boot-ostree-scr-fit"
WKS_FILE_DEPENDS_remove_stm32mp1-disco = "st-image-bootfs st-image-userfs"
WKS_FILE_sota_stm32mp1-disco = "sdimage-stm32mp157c-dk2-trusted-sota.wks.in"

# Xilinx
USE_XSCT_TARBALL_zynqmp = "1"
KERNEL_BUILTIN_WIREGUARD_uz = "1"
## Avnet UltraZed with secure boot support
UBOOT_SIGN_ENABLE_sota_uz3eg-iocc-sec = "1"
SOTA_CLIENT_FEATURES_remove_sota_uz3eg-iocc-sec = "ubootenv"
SOTA_EXTRA_CLIENT_FEATURES_append_sota_uz3eg-iocc-sec = " fiovb"
## Avnet UltraZed with secure boot support and EBBR
UBOOT_SPL_SIGN_ENABLE_sota_uz3eg-iocc-ebbr-sec = "1"
UBOOT_SIGN_ENABLE_sota_uz3eg-iocc-ebbr-sec = "0"

# TI AM64x
MACHINE_FEATURES_append_am64xx-evm = " optee"
SOTA_CLIENT_FEATURES_append_am64xx-evm = " ubootenv"
KERNEL_BUILTIN_WIREGUARD_am64xx-evm = "1"
PREFERRED_PROVIDER_virtual/kernel_am64xx-evm ?= "linux-lmp-ti-staging"
PREFERRED_PROVIDER_u-boot-fw-utils_am64xx-evm = "libubootenv"
PREFERRED_RPROVIDER_u-boot-fw-utils_am64xx-evm = "libubootenv"
# only need boot script for sota builds
WKS_FILE_DEPENDS_append_sota_am64xx-evm = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script_sota_am64xx-evm = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE_sota_am64xx-evm = "fitImage"
KERNEL_CLASSES_sota_am64xx-evm = " kernel-lmp-fitimage "
IMAGE_BOOT_FILES_append_am64xx-evm = " boot.itb"
UBOOT_ENTRYPOINT_am64xx-evm = "0x82000000"
UBOOT_LOADADDRESS_am64xx-evm = "0x82000000"
UBOOT_DTB_LOADADDRESS_am64xx-evm = "0x88000000"

# Nvidia Tegra
DISTRO_FEATURES_append_tegra = " opengl"
DISTRO_FEATURES_DEFAULT_remove_tegra = "modsign"
INITRAMFS_IMAGE_BUNDLE_tegra = ""
PREFERRED_PROVIDER_virtual/kernel_tegra ?= "linux-tegra"
IMAGE_TEGRAFLASH_FS_TYPE_tegra = "ota-ext4"
IMAGE_FSTYPES_append_tegra = " tegraflash"
IMAGE_FSTYPES_remove_tegra = "wic wic.gz wic.bmap"
## jetson-agx-xavier-devkit (tegra194)
OSTREE_DEPLOY_DEVICETREE_tegra194 = "1"
OSTREE_KERNEL_ARGS_tegra194 ?= "\${cbootargs} ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_BOOTLOADER_tegra194 = "syslinux"

# Cross machines / BSPs
## iMX targets should use the u-boot release based on the NXP BSP
PREFERRED_VERSION_u-boot-fio_imx ?= "2020.04"
## Prefer OP-TEE releases from our layer instead of using the .imx fork
PREFERRED_VERSION_optee-client_mx8 = "3.15.0"
PREFERRED_VERSION_optee-examples_mx8 = "3.15.0"
PREFERRED_VERSION_optee-test_mx8 = "3.15.0"
## No need to install u-boot, already a WKS dependency
MACHINE_ESSENTIAL_EXTRA_RDEPENDS_remove_imx = "u-boot-fslc"
## OP-TEE is a dependency of u-boot (fit), no need for WKS_FILE_DEPENDS
OPTEE_WKS_FILE_DEPENDS_imx = ""
