From 10d9e53a64636bcaafcfdb05f3412631197cca81 Mon Sep 17 00:00:00 2001
From: Mike Sul <mike.sul@foundries.io>
Date: Fri, 15 Sep 2023 21:27:51 +0200
Subject: [PATCH] layer: Ensure layer files are synced to disk

Invoke the sync system call to guarantee the proper saving of extracted
layer files on disk before committing the layer. This safeguards against
potential issues where the Docker daemon may erroneously consider a layer
as committed when not all its files are correctly stored on disk.
Such issues could result in empty or incomplete layer files, particularly
if the daemon is abruptly interrupted during the layer injection process
into the Docker store. As a result, software running in the container
based on the layer with 'broken' files will behave incorrectly.

Invoking the sync system call is crucial to prevent this issue,
as the incorrect behavior of software running inside a container
with 'broken' files is often not immediately apparent.
Container engineers may begin debugging the container's software, unaware
that the root cause lies in the fact that some of the container files are
simply 'broken'.

Upstream-Status: Inappropriate [lmp specific]

Signed-off-by: Mike <mike.sul@foundries.io>
---
 layer/layer_store.go | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/layer/layer_store.go b/layer/layer_store.go
index 221c1df7ad..d4a46033c7 100644
--- a/layer/layer_store.go
+++ b/layer/layer_store.go
@@ -7,6 +7,7 @@ import (
 	"os"
 	"path/filepath"
 	"sync"
+	"syscall"
 
 	"github.com/docker/distribution"
 	"github.com/docker/docker/daemon/graphdriver"
@@ -351,6 +352,13 @@ func (ls *layerStore) registerWithDescriptor(ts io.Reader, parent ChainID, descr
 		return existingLayer.getReference(), nil
 	}
 
+	if layer.size > 0 {
+		logrus.Infof("Syncing filesystem prior to committing the layer...; "+
+			"size: %d, chain ID: %s, cache ID: %s", layer.size, layer.chainID, layer.cacheID)
+		// Prior to committing the layer ensure the extracted layer files are saved to disk
+		syscall.Sync()
+	}
+	logrus.Infof("Committing layer %s", layer.chainID)
 	if cErr = tx.Commit(layer.chainID); cErr != nil {
 		return nil, cErr
 	}
-- 
2.40.1

