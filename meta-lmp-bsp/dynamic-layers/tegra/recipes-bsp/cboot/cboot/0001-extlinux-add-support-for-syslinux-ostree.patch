From 4c349e81df7940c23677b6e3857758d924b6c0ea Mon Sep 17 00:00:00 2001
From: Ricardo Salveti <ricardo@foundries.io>
Date: Thu, 15 Jul 2021 18:38:57 -0300
Subject: [PATCH] extlinux: add support for syslinux (ostree)

Add support for parsing syslinux.cfg, which is required by ostree.

Also increase the max path and file len to make it work correct with
ostree deployments (long strings due the ostree hash).

Signed-off-by: Ricardo Salveti <ricardo@foundries.io>
---
 bootloader/partner/common/include/lib/fs.h    |  4 +--
 .../common/lib/linuxboot/extlinux_boot.c      | 34 ++++++++++++++++---
 2 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/bootloader/partner/common/include/lib/fs.h b/bootloader/partner/common/include/lib/fs.h
index a368df6..a0e8ba7 100644
--- a/bootloader/partner/common/include/lib/fs.h
+++ b/bootloader/partner/common/include/lib/fs.h
@@ -27,8 +27,8 @@
 #include <compiler.h>
 #include <tegrabl_blockdev.h>
 
-#define FS_MAX_PATH_LEN 128
-#define FS_MAX_FILE_LEN 64
+#define FS_MAX_PATH_LEN 256
+#define FS_MAX_FILE_LEN 255
 
 __BEGIN_CDECLS;
 
diff --git a/bootloader/partner/common/lib/linuxboot/extlinux_boot.c b/bootloader/partner/common/lib/linuxboot/extlinux_boot.c
index a1e1338..ad45484 100644
--- a/bootloader/partner/common/lib/linuxboot/extlinux_boot.c
+++ b/bootloader/partner/common/lib/linuxboot/extlinux_boot.c
@@ -32,6 +32,7 @@
 #include <tegrabl_auth.h>
 
 #define EXTLINUX_CONF_PATH			"/boot/extlinux/extlinux.conf"
+#define SYSLINUX_CONF_PATH			"/boot/syslinux/syslinux.cfg"
 #define EXTLINUX_CONF_MAX_SIZE		4096UL
 
 #define SIG_FILE_SIZE_OFFSET		8
@@ -183,6 +184,11 @@ static tegrabl_error_t parse_conf_file(void *conf_load_addr, struct conf *extlin
 			extract_val(str, key, &extlinux_conf->section[entry]->linux_path);
 			continue;
 		}
+		key = "KERNEL";
+		if (!strncmp(key, str, strlen(key))) {
+			extract_val(str, key, &extlinux_conf->section[entry]->linux_path);
+			continue;
+		}
 		key = "INITRD";
 		if (!strncmp(key, str, strlen(key))) {
 			extract_val(str, key, &extlinux_conf->section[entry]->initrd_path);
@@ -193,6 +199,11 @@ static tegrabl_error_t parse_conf_file(void *conf_load_addr, struct conf *extlin
 			extract_val(str, key, &extlinux_conf->section[entry]->dtb_path);
 			continue;
 		}
+		key = "DEVICETREE";
+		if (!strncmp(key, str, strlen(key))) {
+			extract_val(str, key, &extlinux_conf->section[entry]->dtb_path);
+			continue;
+		}
 		key = "APPEND";
 		if (!strncmp(key, str, strlen(key))) {
 			extract_val(str, key, &extlinux_conf->section[entry]->boot_args);
@@ -275,8 +286,12 @@ static tegrabl_error_t load_and_parse_conf_file(struct tegrabl_fm_handle *fm_han
 							   &file_size,
 							   NULL);
 	if (err != TEGRABL_NO_ERROR) {
-		pr_error("Failed to find/load %s\n", EXTLINUX_CONF_PATH);
-		goto fail;
+		pr_error("Failed to find/load %s, trying syslinux.cfg...\n", EXTLINUX_CONF_PATH);
+		err = tegrabl_fm_read(fm_handle, SYSLINUX_CONF_PATH, NULL, conf_load_addr, &file_size, NULL);
+		if (err != TEGRABL_NO_ERROR) {
+			pr_error("Failed to find/load %s\n", SYSLINUX_CONF_PATH);
+			goto fail;
+		}
 	}
 
 	if (file_size > EXTLINUX_CONF_MAX_SIZE) {
@@ -303,9 +318,20 @@ static int display_boot_menu(struct conf * const extlinux_conf)
 	pr_trace("%s(): %u\n", __func__, __LINE__);
 
 	/* Display boot menu */
-	pr_info("%s\n", extlinux_conf->menu_title);
+	if (extlinux_conf->menu_title)
+		pr_info("%s\n", extlinux_conf->menu_title);
 	for (idx = 0; idx < extlinux_conf->num_boot_entries; idx++) {
-		pr_info("[%u]: \"%s\"\n", idx + 1, extlinux_conf->section[idx]->menu_label);
+		if (extlinux_conf->section[idx]->menu_label) {
+			pr_info("[%u]: \"%s\"\n", idx + 1,
+					extlinux_conf->section[idx]->menu_label);
+		}
+	}
+
+	/* If not timeout set, boot default option */
+	if (user_input_wait_timeout_ms == 0UL) {
+		ch = extlinux_conf->default_boot_entry;
+		pr_info("No timeout, booting default option\n");
+		return ch;
 	}
 
 	/* Get user input */
