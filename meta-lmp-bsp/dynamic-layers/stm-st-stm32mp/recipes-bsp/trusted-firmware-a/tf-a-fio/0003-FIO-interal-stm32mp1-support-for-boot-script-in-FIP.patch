From 63a65be730daef29e3fc9c09d765cc433aba9423 Mon Sep 17 00:00:00 2001
From: Igor Opaniuk <igor.opaniuk@foundries.io>
Date: Fri, 19 Aug 2022 12:44:15 +0300
Subject: [PATCH] [FIO interal] stm32mp1: support for boot script in FIP

Add support for pre-loading boot script, added as a blob to FIP.

Signed-off-by: Igor Opaniuk <igor.opaniuk@foundries.io>
---
 fdts/stm32mp15-bl2.dtsi                       |  1 +
 fdts/stm32mp15-fw-config.dtsi                 |  5 +++++
 include/export/common/tbbr/tbbr_img_def_exp.h |  5 ++++-
 plat/st/common/stm32mp_fconf_io.c             |  3 ++-
 plat/st/stm32mp1/bl2_plat_setup.c             |  2 ++
 plat/st/stm32mp1/plat_bl2_mem_params_desc.c   | 13 +++++++++++++
 plat/st/stm32mp1/stm32mp1_fip_def.h           |  3 +++
 7 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/fdts/stm32mp15-bl2.dtsi b/fdts/stm32mp15-bl2.dtsi
index d00e35b29..1d89d536d 100644
--- a/fdts/stm32mp15-bl2.dtsi
+++ b/fdts/stm32mp15-bl2.dtsi
@@ -86,6 +86,7 @@
 			hw_cfg_uuid = "08b8f1d9-c9cf-9349-a962-6fbc6b7265cc";
 			tos_fw_cfg_uuid = "26257c1a-dbc6-7f47-8d96-c4c4b0248021";
 			nt_fw_cfg_uuid = "28da9815-93e8-7e44-ac66-1aaf801550f9";
+			boot_scr_uuid = "c75cd5f6-1f9c-11ed-861d-0242ac120002";
 		};
 	};
 #endif /* !STM32MP_USE_STM32IMAGE */
diff --git a/fdts/stm32mp15-fw-config.dtsi b/fdts/stm32mp15-fw-config.dtsi
index 8aece289a..0ffa86d61 100644
--- a/fdts/stm32mp15-fw-config.dtsi
+++ b/fdts/stm32mp15-fw-config.dtsi
@@ -62,6 +62,11 @@
 			id = <TOS_FW_CONFIG_ID>;
 		};
 #endif
+		boot_scr-config {
+			load-address = <0x0 STM32MP_BOOTSCR_BASE>;
+			max-size = <STM32MP_BOOTSCR_SIZE>;
+			id = <BOOTSCR_ID>;
+		};
 	};
 
 	st-mem-firewall {
diff --git a/include/export/common/tbbr/tbbr_img_def_exp.h b/include/export/common/tbbr/tbbr_img_def_exp.h
index 98544c0ae..323940ec9 100644
--- a/include/export/common/tbbr/tbbr_img_def_exp.h
+++ b/include/export/common/tbbr/tbbr_img_def_exp.h
@@ -104,7 +104,10 @@
 /* Realm Monitor Manager (RMM) */
 #define RMM_IMAGE_ID			U(34)
 
+/* Boot script image id */
+#define BOOTSCR_ID			U(35)
+
 /* Max Images */
-#define MAX_IMAGE_IDS			U(35)
+#define MAX_IMAGE_IDS			U(36)
 
 #endif /* ARM_TRUSTED_FIRMWARE_EXPORT_COMMON_TBBR_TBBR_IMG_DEF_EXP_H */
diff --git a/plat/st/common/stm32mp_fconf_io.c b/plat/st/common/stm32mp_fconf_io.c
index ca7195854..114664b7f 100644
--- a/plat/st/common/stm32mp_fconf_io.c
+++ b/plat/st/common/stm32mp_fconf_io.c
@@ -66,7 +66,7 @@ struct plat_io_policy policies[MAX_NUMBER_IDS] = {
 #endif /* (STM32MP_SDMMC || STM32MP_EMMC) && PSA_FWU_SUPPORT */
 };
 
-#define FCONF_ST_IO_UUID_NUMBER	U(8)
+#define FCONF_ST_IO_UUID_NUMBER	U(9)
 
 static io_uuid_spec_t fconf_stm32mp_uuids[FCONF_ST_IO_UUID_NUMBER];
 static OBJECT_POOL_ARRAY(fconf_stm32mp_uuids_pool, fconf_stm32mp_uuids);
@@ -86,6 +86,7 @@ static const struct policies_load_info load_info[FCONF_ST_IO_UUID_NUMBER] = {
 	{HW_CONFIG_ID, "hw_cfg_uuid"},
 	{TOS_FW_CONFIG_ID, "tos_fw_cfg_uuid"},
 	{NT_FW_CONFIG_ID, "nt_fw_cfg_uuid"},
+	{BOOTSCR_ID, "boot_scr_uuid"},
 };
 
 int fconf_populate_stm32mp_io_policies(uintptr_t config)
diff --git a/plat/st/stm32mp1/bl2_plat_setup.c b/plat/st/stm32mp1/bl2_plat_setup.c
index 6f5fcc78c..fd58bf941 100644
--- a/plat/st/stm32mp1/bl2_plat_setup.c
+++ b/plat/st/stm32mp1/bl2_plat_setup.c
@@ -423,6 +423,7 @@ int bl2_plat_handle_post_image_load(unsigned int image_id)
 		BL33_IMAGE_ID,
 		HW_CONFIG_ID,
 		TOS_FW_CONFIG_ID,
+		BOOTSCR_ID,
 	};
 #endif /* !STM32MP_USE_STM32IMAGE */
 
@@ -483,6 +484,7 @@ int bl2_plat_handle_post_image_load(unsigned int image_id)
 
 			case HW_CONFIG_ID:
 			case TOS_FW_CONFIG_ID:
+			case BOOTSCR_ID:
 				break;
 
 			default:
diff --git a/plat/st/stm32mp1/plat_bl2_mem_params_desc.c b/plat/st/stm32mp1/plat_bl2_mem_params_desc.c
index 7963c4a97..41b16ab8b 100644
--- a/plat/st/stm32mp1/plat_bl2_mem_params_desc.c
+++ b/plat/st/stm32mp1/plat_bl2_mem_params_desc.c
@@ -109,6 +109,19 @@ static bl_mem_params_node_t bl2_mem_params_descs[] = {
 		.next_handoff_image_id = INVALID_IMAGE_ID,
 	},
 
+	/* Fill BOOTSCR related information if it exists */
+	{
+		.image_id = BOOTSCR_ID,
+		SET_STATIC_PARAM_HEAD(ep_info, PARAM_IMAGE_BINARY,
+				      VERSION_2, entry_point_info_t,
+				      NON_SECURE | NON_EXECUTABLE),
+		SET_STATIC_PARAM_HEAD(image_info, PARAM_IMAGE_BINARY,
+				      VERSION_2, image_info_t,
+				      IMAGE_ATTRIB_SKIP_LOADING),
+
+		.next_handoff_image_id = INVALID_IMAGE_ID,
+	},
+
 	/* Fill BL33 related information */
 	{
 		.image_id = BL33_IMAGE_ID,
diff --git a/plat/st/stm32mp1/stm32mp1_fip_def.h b/plat/st/stm32mp1/stm32mp1_fip_def.h
index 7a277fdcb..3cdb51997 100644
--- a/plat/st/stm32mp1/stm32mp1_fip_def.h
+++ b/plat/st/stm32mp1/stm32mp1_fip_def.h
@@ -78,6 +78,9 @@
 					 STM32MP_OPTEE_BASE)
 #endif
 
+#define STM32MP_BOOTSCR_BASE		U(0xc4100000)
+#define STM32MP_BOOTSCR_SIZE		U(0x4000)
+
 #if STM32MP13
 #define STM32MP_FW_CONFIG_BASE		SRAM3_BASE
 #endif /* STM32MP13 */
-- 
2.34.1

