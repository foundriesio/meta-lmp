From 2e0e8c99e1c2d21e0646d7cf8281fb15b5e26289 Mon Sep 17 00:00:00 2001
From: Andy Doan <andy@foundries.io>
Date: Tue, 2 Jul 2019 00:06:35 -0500
Subject: [PATCH 10/12] aktualizr-lite: Add a daemon mode

Signed-off-by: Andy Doan <andy@foundries.io>
---
 src/aktualizr_lite/main.cc | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/src/aktualizr_lite/main.cc b/src/aktualizr_lite/main.cc
index 27a22463..aa8f616e 100644
--- a/src/aktualizr_lite/main.cc
+++ b/src/aktualizr_lite/main.cc
@@ -16,12 +16,15 @@
 namespace bpo = boost::program_options;
 
 #ifdef BUILD_DOCKERAPP
+#define should_compare_docker_apps(config) \
+  (config.pacman.type == PackageManager::kOstreeDockerApp && !config.pacman.docker_apps.empty())
 static void add_apps_header(std::vector<std::string> &headers, PackageConfig &config) {
   if (config.type == PackageManager::kOstreeDockerApp) {
     headers.emplace_back("x-ats-dockerapps: " + boost::algorithm::join(config.docker_apps, ","));
   }
 }
 #else
+#define should_compare_docker_apps(config) (false)
 #define add_apps_header(headers, config) \
   {}
 #endif
@@ -259,6 +262,37 @@ static int update_main(Config &config, const bpo::variables_map &variables_map)
   return do_update(*client, *storage, *target);
 }
 
+static int daemon_main(Config &config, const bpo::variables_map &variables_map) {
+  auto storage = INvStorage::newStorage(config.storage);
+  auto client = liteClient(config, storage);
+  bool compareDockerApps = should_compare_docker_apps(config);
+  Uptane::HardwareIdentifier hwid(config.provision.primary_ecu_hardware_id);
+
+  auto current = client->getCurrent();
+  LOG_INFO << "Active image is: " << current;
+
+  unsigned int interval = 300;
+  if (variables_map.count("interval") > 0) {
+    interval = variables_map["interval"].as<unsigned int>();
+  }
+
+  while (true) {
+    LOG_INFO << "Refreshing target metadata";
+    if (!client->updateImagesMeta()) {
+      LOG_WARNING << "Unable to update latest metadata, using local copy";
+    }
+    auto target = find_target(client, hwid, config.pacman.tags, "latest");
+    if (target != nullptr && !targets_eq(*target, current, compareDockerApps)) {
+      LOG_INFO << "Updating base image to: " << *target;
+      if (do_update(*client, *storage, *target) == 0) {
+        // TODO reboot
+      }
+    }
+    sleep(interval);
+  }
+  return 0;
+}
+
 struct SubCommand {
   const char *name;
   int (*main)(Config &, const bpo::variables_map &);
@@ -267,6 +301,7 @@ static SubCommand commands[] = {
     {"status", status_main},
     {"list", list_main},
     {"update", update_main},
+    {"daemon", daemon_main},
 };
 
 void check_info_options(const bpo::options_description &description, const bpo::variables_map &vm) {
@@ -301,6 +336,7 @@ bpo::variables_map parse_options(int argc, char *argv[]) {
       ("ostree-server", bpo::value<std::string>(), "url of the ostree repository")
       ("primary-ecu-hardware-id", bpo::value<std::string>(), "hardware ID of primary ecu")
       ("update-name", bpo::value<std::string>(), "optional name of the update when running \"update\". default=latest")
+      ("interval", bpo::value<unsigned int>(), "optional interval in seconds to poll for update when in daemon mode. default=300")
       ("command", bpo::value<std::string>(), subs.c_str());
   // clang-format on
 
-- 
2.23.0

