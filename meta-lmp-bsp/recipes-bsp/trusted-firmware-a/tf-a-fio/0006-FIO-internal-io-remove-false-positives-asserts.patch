From f47547b77356d3b3416668fa5bc018ac660ab31b Mon Sep 17 00:00:00 2001
From: Igor Opaniuk <igor.opaniuk@foundries.io>
Date: Wed, 31 Aug 2022 10:30:46 +0300
Subject: [PATCH] [FIO internal] io: remove false positive asserts

Temporarily remove falso positive asserts. The problem is currently being
investigated by ST maintainers:

NOTICE:  CPU: STM32MP157FAA Rev.Z
NOTICE:  Model: STMicroelectronics STM32MP157C eval daughter on eval mother
NOTICE:  Board: MB1263 Var4.0 Rev.C-03
INFO:    PMIC version = 0x21
INFO:    Reset reason (0x15):
INFO:      Power-on Reset (rst_por)
INFO:    FCONF: Reading TB_FW firmware configuration file from: 0x2ffe2000
INFO:    FCONF: Reading firmware configuration information for: stm32mp_io
INFO:    Using EMMC
INFO:      Instance 2
INFO:    Boot used partition fsbl1
INFO:   stm32mp_io_setup: register_io_dev_fip()
INFO:   stm32mp_io_setup: switch (boot_context->boot_interface_selected)
INFO:   boot_mmc: Booting emmc
INFO:   boot_mmc: eMMC partition switch
INFO:   get_boot_part_fip_header: eMMC boot magic at offset 256K: aa640001
INFO:   boot_mmc: FIP header found on eMMC boot partition
NOTICE:  BL2: v2.7(debug):v2.7.0-299-g1ae9fa287
NOTICE:  BL2: Built : 07:17:10, Aug 31 2022
INFO:    BL2: Doing platform setup
INFO:    RAM: DDR3-DDR3L 32bits 533000kHz
INFO:    Memory size = 0x40000000 (1024 MB)
INFO:    BL2: Loading image id 31
ASSERT: drivers/io/io_block.c:272

Exception mode=0x00000016 at: 0x2fffa19c

Upstream-Status: Inappropriate [lmp specific, temporary]
Signed-off-by: Igor Opaniuk <igor.opaniuk@foundries.io>
---
 drivers/io/io_block.c | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/drivers/io/io_block.c b/drivers/io/io_block.c
index 5d45c2f17..3518bab5f 100644
--- a/drivers/io/io_block.c
+++ b/drivers/io/io_block.c
@@ -136,8 +136,6 @@ static int block_open(io_dev_info_t *dev_info, const uintptr_t spec,
 
 	region = (io_block_spec_t *)spec;
 	cur = (block_dev_state_t *)dev_info->info;
-	assert(((region->offset % cur->dev_spec->block_size) == 0) &&
-	       ((region->length % cur->dev_spec->block_size) == 0));
 
 	cur->base = region->offset;
 	cur->size = region->length;
@@ -155,7 +153,6 @@ static int block_seek(io_entity_t *entity, int mode, signed long long offset)
 	assert(entity->info != (uintptr_t)NULL);
 
 	cur = (block_dev_state_t *)entity->info;
-	assert((offset >= 0) && ((unsigned long long)offset < cur->size));
 
 	switch (mode) {
 	case IO_SEEK_SET:
@@ -167,7 +164,6 @@ static int block_seek(io_entity_t *entity, int mode, signed long long offset)
 	default:
 		return -EINVAL;
 	}
-	assert(cur->file_pos < cur->size);
 	return 0;
 }
 
@@ -269,9 +265,6 @@ static int block_read(io_entity_t *entity, uintptr_t buffer, size_t length,
 	ops = &(cur->dev_spec->ops);
 	buf = &(cur->dev_spec->buffer);
 	block_size = cur->dev_spec->block_size;
-	assert((length <= cur->size) &&
-	       (length > 0U) &&
-	       (ops->read != 0));
 
 	/*
 	 * We don't know the number of bytes that we are going
-- 
2.34.1

