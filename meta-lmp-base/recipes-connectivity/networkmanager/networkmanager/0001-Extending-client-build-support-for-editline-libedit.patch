From ed8727d9c7f99dd6dcb30cd79d5077e816e2796d Mon Sep 17 00:00:00 2001
From: Daiane Angolini <daiane.angolini@foundries.io>
Date: Tue, 11 Jan 2022 16:52:06 +0000
Subject: [PATCH] Extending client build support for editline (libedit)

Upstream-Status: Pending

Signed-off-by: Daiane Angolini <daiane.angolini@foundries.io>
---
 src/nmcli/common.c      | 9 ++++++---
 src/nmcli/connections.c | 8 ++++++++
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/src/nmcli/common.c b/src/nmcli/common.c
index 5aa4fae..090617a 100644
--- a/src/nmcli/common.c
+++ b/src/nmcli/common.c
@@ -914,9 +914,11 @@ read_again:
         }
     }
 
+#if defined(HAVE_READLINE_HISTORY_H)
     /* Add string to the history */
     if (rl_string && *rl_string)
         add_history(rl_string);
+#endif
 
     if (nmc_seen_sigint()) {
         /* Ctrl-C */
@@ -1015,10 +1017,11 @@ nmc_readline_echo(const NmcConfig *nmc_config, gboolean echo_on, const char *pro
     char *        str;
 #if defined(HAVE_READLINE_HISTORY_H)
     nm_auto_free HISTORY_STATE *saved_history  = NULL;
-#endif
     HISTORY_STATE               passwd_history = {
         0,
-    };
+    }
+#endif
+    ;
 
     va_start(args, prompt_fmt);
     prompt = g_strdup_vprintf(prompt_fmt, args);
@@ -1031,11 +1034,11 @@ nmc_readline_echo(const NmcConfig *nmc_config, gboolean echo_on, const char *pro
 #if defined(HAVE_READLINE_HISTORY_H)
         saved_history = history_get_history_state();
         history_set_history_state(&passwd_history);
-#endif
 	/* stifling history is important as it tells readline to
          * not store anything, otherwise sensitive data could be
          * leaked */
         stifle_history(0);
+#endif
         rl_redisplay_function = nmc_secret_redisplay;
     }
 
diff --git a/src/nmcli/connections.c b/src/nmcli/connections.c
index f3b514d..90c5cf2 100644
--- a/src/nmcli/connections.c
+++ b/src/nmcli/connections.c
@@ -6617,8 +6617,10 @@ load_history_cmds(const char *uuid)
     keys = g_key_file_get_keys(kf, uuid, NULL, NULL);
     for (i = 0; keys && keys[i]; i++) {
         line = g_key_file_get_string(kf, uuid, keys[i], NULL);
+#if defined(HAVE_READLINE_HISTORY_H)
         if (line && *line)
             add_history(line);
+#endif
         g_free(line);
     }
     g_strfreev(keys);
@@ -6633,13 +6635,17 @@ save_history_cmds(const char *uuid)
     gs_free_error GError *error        = NULL;
     gs_free char *        filename     = NULL;
     gs_free char *        data         = NULL;
+#if defined(HAVE_READLINE_HISTORY_H)
     HIST_ENTRY **         hist;
+#endif
     gsize                 len;
     gsize                 i;
 
+#if defined(HAVE_READLINE_HISTORY_H)
     hist = history_list();
     if (!hist)
         return;
+#endif
 
     filename = g_build_filename(g_get_home_dir(), NMCLI_EDITOR_HISTORY, NULL);
 
@@ -6654,6 +6660,7 @@ save_history_cmds(const char *uuid)
         g_clear_error(&error);
     }
 
+#if defined(HAVE_READLINE_HISTORY_H)
     /* Remove previous history group and save new history entries */
     g_key_file_remove_group(kf, uuid, NULL);
     for (i = 0; hist[i]; i++) {
@@ -6662,6 +6669,7 @@ save_history_cmds(const char *uuid)
         nm_sprintf_buf(key, "%zd", i);
         g_key_file_set_string(kf, uuid, key, hist[i]->line);
     }
+#endif
 
     /* Write history to file */
     data = g_key_file_to_data(kf, &len, NULL);
-- 
2.25.1

