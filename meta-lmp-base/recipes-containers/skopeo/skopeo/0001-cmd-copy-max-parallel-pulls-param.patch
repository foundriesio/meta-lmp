From 897767edb5dda313483ba5496138230eb5383e3a Mon Sep 17 00:00:00 2001
From: Mike Sul <mike.sul@foundries.io>
Date: Tue, 6 Jun 2023 20:33:48 +0200
Subject: [PATCH] [fio up]: cmd: copy: Add param to specify max parallel pulls

Upstream-Status: Pending

Signed-off-by: Mike <mike.sul@foundries.io>
---
 cmd/skopeo/copy.go | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/cmd/skopeo/copy.go b/cmd/skopeo/copy.go
index 6a7e8013..0e9e97ec 100644
--- a/cmd/skopeo/copy.go
+++ b/cmd/skopeo/copy.go
@@ -44,6 +44,7 @@ type copyOptions struct {
 	encryptLayer             []int                     // The list of layers to encrypt
 	encryptionKeys           []string                  // Keys needed to encrypt the image
 	decryptionKeys           []string                  // Keys needed to decrypt the image
+	maxParallelDownloads     uint                      // The maximum layers to pull at the same time. Applies to a single copy operation.
 }
 
 func copyCmd(global *globalOptions) *cobra.Command {
@@ -95,6 +96,7 @@ See skopeo(1) section "IMAGE NAMES" for the expected format
 	flags.StringSliceVar(&opts.encryptionKeys, "encryption-key", []string{}, "*Experimental* key with the encryption protocol to use needed to encrypt the image (e.g. jwe:/path/to/key.pem)")
 	flags.IntSliceVar(&opts.encryptLayer, "encrypt-layer", []int{}, "*Experimental* the 0-indexed layer indices, with support for negative indexing (e.g. 0 is the first layer, -1 is the last layer)")
 	flags.StringSliceVar(&opts.decryptionKeys, "decryption-key", []string{}, "*Experimental* key needed to decrypt the image")
+	flags.UintVar(&opts.maxParallelDownloads, "max-parallel-pulls", 6, "The maximum layers to pull at the same time (defaults to `6` if not specified or zet to `0`). Applies to a single copy operation.")
 	return cmd
 }
 
@@ -300,6 +302,7 @@ func (opts *copyOptions) run(args []string, stdout io.Writer) (retErr error) {
 			OciDecryptConfig:                 decConfig,
 			OciEncryptLayers:                 encLayers,
 			OciEncryptConfig:                 encConfig,
+			MaxParallelDownloads:             opts.maxParallelDownloads,
 		})
 		if err != nil {
 			return err
-- 
2.40.1

