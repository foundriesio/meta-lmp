@@INCLUDE_ENV_COMMON@@

if test "${fiovb.bootupgrade_available}" = "1" || test "${fiovb.upgrade_available}" = "1"; then
	if test "${ostree_deploy_usr}" = "1"; then

		setenv image_path "${bootdir}/update.itb"
	else
		setenv image_path "${ostree_root}/usr/lib/firmware/update.itb"
	fi

	echo "${fio_msg} load and run update script from ${image_path} ..."

	run load_image
	source ${loadaddr}
fi

setenv bootcmd_load_f 'ext4load ${devtype} ${devnum}:${ostree_bootpart} ${fit_addr} "/boot"${kernel_image}'
setenv bootcmd_tee_ovy 'if test -n ${optee_ovl_addr}; then imxtract ${fit_addr}#conf@@FIT_NODE_SEPARATOR@@${fdt_file_final} fdt@@FIT_NODE_SEPARATOR@@${fdt_file_final} ${fdt_addr}; fdt addr ${fdt_addr}; fdt resize 0x1000; fdt apply ${optee_ovl_addr}; fi'
if test -z "${bootcmd_custom_run}"; then setenv bootcmd_run 'if test -n ${optee_ovl_addr}; then bootm ${fit_addr}#conf@@FIT_NODE_SEPARATOR@@${fdt_file_final} ${fit_addr}#conf@@FIT_NODE_SEPARATOR@@${fdt_file_final} ${fdt_addr}; else echo "${fio_msg} loading ${fdt_file_final}"; bootm ${fit_addr}#conf@@FIT_NODE_SEPARATOR@@${fdt_file_final}; fi'; else setenv bootcmd_run ${bootcmd_custom_run}; setenv bootcmd_custom_run; fi
setenv bootcmd_rollback 'if test -n "${kernel_image2}" && test "${fiovb.is_secondary_boot}" = "0" && test "${fiovb.rollback}" = "1"; then setenv kernel_image "${kernel_image2}"; setenv bootdir "${bootdir2}"; setenv bootargs "${bootargs2}"; fi;'

run bootcmd_rollback
run bootcmd_load_f
run bootcmd_tee_ovy
if test -n "${bootcmd_load_fw}"; then
	run bootcmd_load_fw
fi

# If we are validating secondary boot path, Linux should force reboot back to
# primary path after running reboot cmd (this is needed for boards without
# software POR reset support, like Apalis iMX6)
if test "${fiovb.is_secondary_boot}" = "1"; then
	echo "${fiovb_msg} Forcing secondary boot to 0 after reboot"
	run set_primary_boot
fi

run bootcmd_run

reset
