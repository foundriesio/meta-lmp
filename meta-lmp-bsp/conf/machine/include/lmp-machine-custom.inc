# LMP specific configuration

# Beaglebone
PREFERRED_PROVIDER_virtual/bootloader:beaglebone-yocto = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:beaglebone-yocto = "u-boot-fio"
WKS_FILE_DEPENDS:append:beaglebone-yocto = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:beaglebone-yocto = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:beaglebone-yocto = " ubootenv"
OSTREE_KERNEL_ARGS:beaglebone-yocto ?= "console=ttyS0,115200n8 ${OSTREE_KERNEL_ARGS_COMMON}"
KERNEL_DEVICETREE:append:beaglebone-yocto = " am335x-boneblack-wireless.dtb"
IMAGE_BOOT_FILES:beaglebone-yocto = "u-boot.img MLO boot.itb"
KERNEL_IMAGETYPE:beaglebone-yocto = "fitImage"
KERNEL_CLASSES:beaglebone-yocto = " kernel-lmp-fitimage "
MACHINE_EXTRA_RRECOMMENDS:append:beaglebone-yocto = " bt-fw wl18xx-calibrator wl18xx-target-scripts wl18xx-fw wlconf"
## beaglebone-yocto.conf appends kernel-image-zimage by default
IMAGE_INSTALL:remove:beaglebone-yocto = "kernel-image-zimage"

# Raspberry Pi
PREFERRED_PROVIDER_virtual/kernel:rpi ?= "linux-lmp-rpi"
PREFERRED_PROVIDER_virtual/bootloader:rpi = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:rpi = "u-boot-fio"
SOTA_CLIENT_FEATURES:append:rpi = " ubootenv"
WKS_FILE_DEPENDS_BOOTLOADERS:rpi = "virtual/bootloader"
WKS_FILE_DEPENDS:append:rpi = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:rpi = "u-boot-ostree-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:rpi = "u-boot-ostree-scr-fit"
PREFERRED_PROVIDER_virtual/dtb:rpi ?= "lmp-device-tree"
IMAGE_FSTYPES:remove:rpi = "ext3 rpi-sdimg"
IMAGE_BOOT_FILES:rpi = "${BOOTFILES_DIR_NAME}/* u-boot.bin;${SDIMG_KERNELIMAGE} ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:rpi = "${BOOTFILES_DIR_NAME}/* u-boot.bin;${SDIMG_KERNELIMAGE} ${@make_dtb_boot_files(d)} boot.itb"
KERNEL_CLASSES:sota:rpi = " kernel-lmp-fitimage "
KERNEL_IMAGETYPE:sota:rpi = "fitImage"
## Workaround for https://github.com/raspberrypi/firmware/issues/1483
ENABLE_UART:rpi = "1"
## Mimic meta-raspberrypi behavior
KERNEL_SERIAL:rpi ?= "${@oe.utils.conditional("ENABLE_UART", "1", "console=ttyS0,115200", "", d)}"
KERNEL_SERIAL:raspberrypi-cm3 ?= "console=ttyAMA0,115200"
OSTREE_KERNEL_ARGS_COMMON_RPI ?= "coherent_pool=1M 8250.nr_uarts=1 console=tty1 cgroup_enable=memory ${KERNEL_SERIAL} ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS:raspberrypi3 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
OSTREE_KERNEL_ARGS:raspberrypi-cm3 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
OSTREE_KERNEL_ARGS:raspberrypi4 ?= "vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 ${OSTREE_KERNEL_ARGS_COMMON_RPI}"
## U-Boot entrypoints for rpi
UBOOT_ENTRYPOINT:rpi = "0x00200000"
UBOOT_DTB_LOADADDRESS:rpi = "0x02600000"
UBOOT_DTBO_LOADADDRESS:rpi = "0x026d0000"
## Rpi 4/CM4
MACHINE_EXTRA_RRECOMMENDS:append:raspberrypi4 = " linux-firmware-rpidistro-bcm43456"

# RISC-V targets
PREFERRED_PROVIDER_virtual/bootloader:qemuriscv64 = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:qemuriscv64 = "u-boot-fio"
IMAGE_BOOT_FILES:qemuriscv64 = "boot.itb"
KERNEL_IMAGETYPE:qemuriscv64 = "fitImage"
WKS_FILE_DEPENDS:append:qemuriscv64 = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:qemuriscv64 = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:qemuriscv64 = " ubootenv"
KERNEL_IMAGETYPES:remove:qemuriscv64 = "uImage"
KERNEL_CLASSES:qemuriscv64 = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS:qemuriscv64 ?= "earlycon=sbi ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT:qemuriscv64 = "0x80400000"
RISCV_SBI_PAYLOAD:qemuriscv64 = "u-boot.bin"
QB_DEFAULT_BIOS:qemuriscv64 = "fw_payload.elf"
QB_DRIVE_TYPE:qemuriscv64 = "/dev/vdb"
QB_OPT_APPEND:append:qemuriscv64 = " -bios ${DEPLOY_DIR_IMAGE}/fw_payload.elf"

# QEMU ARM
PREFERRED_PROVIDER_virtual/bootloader:qemuarm64 = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:qemuarm64 = "u-boot-fio"
WKS_FILE_DEPENDS:append:qemuarm64 = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:qemuarm64 = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:qemuarm64 = " ubootenv"
IMAGE_BOOT_FILES:qemuarm64 = "boot.itb"
KERNEL_IMAGETYPE:qemuarm64 = "fitImage"
KERNEL_CLASSES:qemuarm64 = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS:qemuarm64 ?= "console=ttyAMA0 ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT:qemuarm64 = "0x40080000"
MACHINE_FEATURES:append:qemuarm64-secureboot = " optee"
OSTREE_SPLIT_BOOT:qemuarm64-secureboot = "1"
OSTREE_DEPLOY_USR_OSTREE_BOOT:qemuarm64-secureboot = "1"
INITRAMFS_RECOVERY_IMAGE:qemuarm64-secureboot = "initramfs-ostree-lmp-recovery"
WKS_FILE:sota:qemuarm64-secureboot = "sdimage-split-boot-sota.wks.in"
## Use same minimal memory amount as suggested by op-tee
QB_MEM:qemuarm64-secureboot = "-m 1057"
QB_DRIVE_TYPE:qemuarm64-secureboot = "/dev/vdb"
## EBBR / SystemReady
WKS_FILE_DEPENDS:remove:qemuarm64-secureboot-ebbr = "u-boot-default-script"
PREFERRED_PROVIDER_virtual/bootloader:qemuarm64-secureboot-ebbr = "edk2-firmware"
SOTA_CLIENT_FEATURES:remove:qemuarm64-secureboot-ebbr = "ubootenv"
KERNEL_IMAGETYPE:qemuarm64-secureboot-ebbr ?= "Image"
KERNEL_CLASSES:qemuarm64-secureboot-ebbr ?= ""
EFI_PROVIDER:qemuarm64-secureboot-ebbr ?= "grub-efi"
OSTREE_SPLIT_BOOT:qemuarm64-secureboot-ebbr = "0"
OSTREE_LOADER_LINK:qemuarm64-secureboot-ebbr = "1"
OSTREE_BOOTLOADER:qemuarm64-secureboot-ebbr ?= "grub"
OSTREE_KERNEL_ARGS:qemuarm64-secureboot-ebbr ?= "${OSTREE_KERNEL_ARGS_COMMON}"
IMAGE_BOOT_FILES:qemuarm64-secureboot-ebbr = ""
WKS_FILE:qemuarm64-secureboot-ebbr:sota ?= "efidisk-sota.wks.in"
QB_MACHINE:qemuarm64-secureboot-ebbr = "-machine virt"
QB_DRIVE_TYPE:qemuarm64-secureboot-ebbr = "/dev/hd"
QB_DEFAULT_KERNEL:qemuarm64-secureboot-ebbr = "none"
QB_OPT_APPEND:append:qemuarm64-secureboot-ebbr = " -drive file=@DEPLOY_DIR_IMAGE@/QEMU_EFI.fd,format=raw,if=pflash,readonly=on -drive file=@DEPLOY_DIR_IMAGE@/QEMU_VARS.fd,format=raw,if=pflash"
QB_OPT_APPEND:remove:qemuarm64-secureboot-ebbr = "-no-acpi"
QB_DEFAULT_BIOS:qemuarm64-secureboot-ebbr = ""

# QEMU ARM
PREFERRED_PROVIDER_virtual/bootloader:qemuarm = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:qemuarm = "u-boot-fio"
WKS_FILE_DEPENDS:append:qemuarm = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:qemuarm = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:qemuarm = " ubootenv"
IMAGE_BOOT_FILES:qemuarm = "boot.itb"
KERNEL_IMAGETYPE:qemuarm = "fitImage"
KERNEL_CLASSES:qemuarm = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS:qemuarm ?= "console=ttyAMA0 ${OSTREE_KERNEL_ARGS_COMMON}"
UBOOT_ENTRYPOINT:qemuarm = "0x40080000"
QB_DRIVE_TYPE:qemuarm = "/dev/vdb"
## Currently support u-boot -> Linux boot
## will add more security later
QB_OPT_APPEND:qemuarm = "-no-acpi -bios ${DEPLOY_DIR_IMAGE}/u-boot.bin -d unimp"

# ARM64 Generic (SystemReady)
OSTREE_BOOTLOADER:generic-arm64 ?= "grub"
MACHINE_FEATURES:append:generic-arm64 = " acpi pci usbhost"
EFI_PROVIDER:generic-arm64 ?= "grub-efi"
WKS_FILE:generic-arm64:sota ?= "image-efi-installer-grub.wks.in"
WKS_FILE_DEPENDS:append:generic-arm64 = " ${INITRD_IMAGE_LIVE}"
## wic-based installer requires image to be available via IMAGE_BOOT_FILES
IMAGE_BOOT_FILES:generic-arm64 = "${@bb.utils.contains('WKS_FILE', 'image-efi-installer-grub.wks.in', 'grub-efi-bootaa64.efi;EFI/BOOT/bootaa64.efi ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}${IMAGE_NAME_SUFFIX}.ota-ext4;rootfs.img', '', d)}"

# Intel
MACHINE_FEATURES:append:intel-corei7-64 = " tpm2"
UEFI_SIGN_ENABLE:intel-corei7-64 = "1"
OSTREE_BOOTLOADER:intel-corei7-64 ?= "none"
OSTREE_KERNEL_ARGS:intel-corei7-64 ?= "console=ttyS0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
EFI_PROVIDER:intel-corei7-64 = "systemd-boot"
OSTREE_SPLIT_BOOT:intel-corei7-64 = "1"
OSTREE_LOADER_LINK:intel-corei7-64 = "0"
KERNEL_CLASSES:intel-corei7-64 = " kernel-lmp-efi "
WKS_FILE:intel-corei7-64:sota ?= "efidisk-sota.wks.in"
WKS_FILE_DEPENDS:append:intel-corei7-64 = " ${INITRD_IMAGE_LIVE} efitools"
WKS_FILE_DEPENDS_BOOTLOADERS:remove:intel-corei7-64 = "grub-efi"
## wic-based installer requires image to be available via IMAGE_BOOT_FILES
IMAGE_BOOT_FILES:intel-corei7-64 = "${@bb.utils.contains('WKS_FILE', 'image-efi-installer.wks.in', 'systemd-bootx64.efi;EFI/BOOT/bootx64.efi systemd-bootx64.efi;EFI/systemd/systemd-bootx64.efi ${IMGDEPLOYDIR}/${IMAGE_BASENAME}-${MACHINE}.ota-ext4;rootfs.img', '', d)}"
IMAGE_EFI_BOOT_FILES:append:intel-corei7-64 = " LockDown.efi ${@make_efi_cer_boot_files(d)}"

# Common for iMX targets
## Prefer IMX_DEFAULT_BSP=nxp as mainline removes every common machine override
IMX_DEFAULT_BSP = "nxp"
OSTREE_KERNEL_ARGS:mx6-generic-bsp ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS:mx6ull-generic-bsp ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS:mx7d-generic-bsp ?= "console=tty1 console=ttymxc0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
OSTREE_KERNEL_ARGS:mx7ulp-generic-bsp ?= "console=tty1 console=ttyLP0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"

# Embedded Artists i.MX7ULP COM
UBOOT_SIGN_ENABLE:sota:imx7ulpea-ucom ?= "1"
PREFERRED_PROVIDER_u-boot-default-script:imx7ulpea-ucom = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:imx7ulpea-ucom = "u-boot-ostree-scr-fit"
LMP_BOOT_FIRMWARE:imx7ulpea-ucom = "SPL u-boot.itb"
IMAGE_BOOT_FILES:imx7ulpea-ucom = "boot.scr uEnv.txt zImage ${@make_dtb_boot_files(d)}"
IMAGE_BOOT_FILES:sota:imx7ulpea-ucom = "boot.itb"
KERNEL_IMAGETYPE:sota:imx7ulpea-ucom = "fitImage"
KERNEL_CLASSES:sota:imx7ulpea-ucom = " kernel-lmp-fitimage "
OSTREE_KERNEL_ARGS_COMMON:imx7ulpea-ucom ?= "earlycon rootfstype=ext4"
SOTA_CLIENT_FEATURES:append:imx7ulpea-ucom = " ubootenv"
UBOOT_CLASSES:imx7ulpea-ucom = "uboot-fitimage"
BOOTSCR_LOAD_ADDR:imx7ulpea-ucom = "0x60800000"

# iMX6UL
UBOOT_SIGN_ENABLE:sota:mx6ul-generic-bsp ??= "1"
PREFERRED_PROVIDER_virtual/kernel:mx6ul-nxp-bsp ?= "linux-lmp-fslc-imx"
IMX_DEFAULT_BOOTLOADER:mx6ul-generic-bsp ?= "u-boot-fio"
WKS_FILE_DEPENDS:append:mx6ul-generic-bsp = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:mx6ul-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx6ul-generic-bsp = "u-boot-ostree-scr-fit"
SPL_BINARY:mx6ul-generic-bsp = "SPL"
UBOOT_CLASSES:mx6ul-generic-bsp = "uboot-fitimage"
UBOOT_CONFIG:mx6ul-generic-bsp = "sd"
UBOOT_SUFFIX:mx6ul-generic-bsp = "bin"
UBOOT_MAKE_TARGET:mx6ul-generic-bsp = ""
UBOOT_DTB_LOADADDRESS:mx6ul-generic-bsp = "0x85800000"
UBOOT_RD_LOADADDRESS:mx6ul-generic-bsp = "0x84000000"
MACHINE_FEATURES:append:mx6ul-generic-bsp = " optee"
LMP_BOOT_FIRMWARE_FILES:mx6ul-generic-bsp = "SPL u-boot.itb"
IMAGE_BOOT_FILES:sota:mx6ul-generic-bsp = " boot.itb"
IMAGE_BOOT_FILES:mx6ul-generic-bsp = " boot.scr uEnv.txt zImage ${@make_dtb_boot_files(d)}"
KERNEL_IMAGETYPE:sota:mx6ul-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx6ul-generic-bsp = " kernel-lmp-fitimage "
WKS_FILE:mx6ul-generic-bsp:sota = "sdimage-imx6-spl-fit-sota.wks"
PREFERRED_VERSION_u-boot-fio:mx6ul-nxp-bsp ?= "imx-2023.04"
# iMX6UL EVK
UBOOT_SIGN_ENABLE:sota:imx6ulevk ?= "1"
SOTA_CLIENT_FEATURES:append:imx6ulevk = " ubootenv"
KERNEL_DEVICETREE:imx6ulevk = "imx6ul-14x14-evk.dtb"
BOOTSCR_LOAD_ADDR:imx6ulevk = "0x85000000"

# iMX6ULL
UBOOT_SIGN_ENABLE:sota:mx6ull-generic-bsp ??= "1"
PREFERRED_PROVIDER_virtual/kernel:mx6ull-nxp-bsp ?= "linux-lmp-fslc-imx"
IMX_DEFAULT_BOOTLOADER:mx6ull-generic-bsp ?= "u-boot-fio"
WKS_FILE_DEPENDS:append:mx6ull-generic-bsp = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:mx6ull-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx6ull-generic-bsp = "u-boot-ostree-scr-fit"
SPL_BINARY:mx6ull-generic-bsp = "SPL"
UBOOT_CLASSES:mx6ull-generic-bsp = "uboot-fitimage"
UBOOT_CONFIG:mx6ull-generic-bsp = "sd"
UBOOT_SUFFIX:mx6ull-generic-bsp = "bin"
UBOOT_MAKE_TARGET:mx6ull-generic-bsp = ""
UBOOT_DTB_LOADADDRESS:mx6ull-generic-bsp = "0x85800000"
UBOOT_RD_LOADADDRESS:mx6ull-generic-bsp = "0x84000000"
MACHINE_FEATURES:append:mx6ull-generic-bsp = " optee"
LMP_BOOT_FIRMWARE_FILES:mx6ull-generic-bsp = "SPL u-boot.itb"
IMAGE_BOOT_FILES:sota:mx6ull-generic-bsp = " boot.itb"
IMAGE_BOOT_FILES:mx6ull-generic-bsp = " boot.scr uEnv.txt zImage ${@make_dtb_boot_files(d)}"
KERNEL_IMAGETYPE:sota:mx6ull-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx6ull-generic-bsp = " kernel-lmp-fitimage "
WKS_FILE:mx6ull-generic-bsp:sota = "sdimage-imx6-spl-fit-sota.wks"
PREFERRED_VERSION_u-boot-fio:mx6ull-nxp-bsp ?= "imx-2023.04"
# iMX6ULL EVK
UBOOT_SIGN_ENABLE:sota:imx6ullevk ?= "1"
SOTA_CLIENT_FEATURES:append:imx6ullevk = " ubootenv"
KERNEL_DEVICETREE:imx6ullevk = "imx6ull-14x14-evk.dtb"
BOOTSCR_LOAD_ADDR:imx6ullevk = "0x85000000"

# iMX8QM
SOTA_CLIENT_FEATURES:append:mx8qm-generic-bsp = " ubootenv"
IMAGE_BOOT_FILES:mx8qm-nxp-bsp = "imx-boot u-boot.itb hdmitxfw.bin ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8qm-nxp-bsp = "imx-boot u-boot.itb"
LMP_BOOT_FIRMWARE_FILES:mx8qm-nxp-bsp = "imx-boot u-boot.itb"
BOOTSCR_LOAD_ADDR:mx8qm-generic-bsp = "0x83100000"
KERNEL_IMAGETYPE:sota:mx8qm-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8qm-generic-bsp = " kernel-lmp-fitimage "
FIT_LOADABLES:mx8qm-generic-bsp ?= "hdmitxfw.bin"
WKS_FILE:mx8qm-nxp-bsp:sota = "sdimage-imx8-sota.wks.in"
IMX_DEFAULT_BOOTLOADER:mx8qm-generic-bsp ?= "u-boot-fio"
WKS_FILE_DEPENDS:append:mx8qm-generic-bsp = " u-boot-default-script imx-boot"
PREFERRED_PROVIDER_u-boot-default-script:mx8qm-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8qm-generic-bsp = "u-boot-ostree-scr-fit"
UBOOT_CLASSES:mx8qm-generic-bsp = "uboot-fitimage"
IMXBOOT_TARGETS:mx8qm-nxp-bsp = "flash_evk_spl"
ATF_BINARY:mx8qm-generic-bsp = "arm-trusted-firmware.bin"
EXTRA_IMAGEDEPENDS:append:mx8qm-generic-bsp = "virtual/trusted-firmware-a"
UBOOT_ENTRYPOINT:mx8qm-generic-bsp = "0x80280000"
UBOOT_LOADADDRESS:mx8qm-generic-bsp = "0x80280000"
UBOOT_DTB_LOADADDRESS:mx8qm-generic-bsp = "0x83000000"
UBOOT_SIGN_ENABLE:sota:mx8qm-generic-bsp ??= "1"
PREFERRED_VERSION_u-boot-fio:mx8qm-nxp-bsp ?= "imx-2023.04"
## iMX8QM MEK
UBOOT_SIGN_ENABLE:sota:imx8qm-mek ?= "1"
OSTREE_KERNEL_ARGS:imx8qm-mek ?= "pci=nomsi console=ttyLP0,115200 earlycon ${OSTREE_KERNEL_ARGS_COMMON}"
PREFERRED_PROVIDER_virtual/kernel:imx8qm-mek ?= "linux-lmp-fslc-imx"
KERNEL_DANGLING_FEATURES_WARN_ONLY:imx8qm-mek ?= "1"
UBOOT_SUFFIX:imx8qm-mek = "bin"
UBOOT_DTB_NAME:imx8qm-mek ?= "fsl-imx8qm-mek.dtb"

# iMX8ULP
UBOOT_SIGN_ENABLE:sota:mx8ulp-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx8ulp-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx8ulp-generic-bsp = "0x80400000"
UBOOT_LOADADDRESS:mx8ulp-generic-bsp = "0x80400000"
UBOOT_DTB_LOADADDRESS:mx8ulp-generic-bsp = "0x83000000"
UBOOT_CLASSES:mx8ulp-generic-bsp = "uboot-fitimage"
IMXBOOT_TARGETS:mx8ulp-nxp-bsp ?= "flash_singleboot_spl_m33"
ATF_BINARY:mx8ulp-generic-bsp = "arm-trusted-firmware.bin"
EXTRA_IMAGEDEPENDS:append:mx8ulp-generic-bsp = " virtual/trusted-firmware-a"
IMX_EXTRA_FIRMWARE:append:mx8ulp-nxp-bsp = " imx-m33-demos"
KERNEL_IMAGETYPE:sota:mx8ulp-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8ulp-generic-bsp = " kernel-lmp-fitimage "
WKS_FILE:mx8ulp-nxp-bsp:sota = "sdimage-imx8-sota.wks.in"
WKS_FILE_DEPENDS:append:mx8ulp-generic-bsp = " u-boot-default-script imx-boot"
IMAGE_BOOT_FILES:mx8ulp-nxp-bsp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8ulp-nxp-bsp = "imx-boot u-boot.itb"
PREFERRED_PROVIDER_u-boot-default-script:mx8ulp-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8ulp-generic-bsp = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:mx8ulp-generic-bsp = " ubootenv"
LMP_BOOT_FIRMWARE_FILES:mx8ulp-nxp-bsp = "imx-boot u-boot.itb"
PREFERRED_VERSION_optee-os-fio:mx8ulp-nxp-bsp = "3.21.0-imx"
PREFERRED_VERSION_optee-os-fio-mfgtool:mx8ulp-nxp-bsp = "3.21.0-imx"
PREFERRED_VERSION_optee-os-tadevkit:mx8ulp-nxp-bsp = "3.21.0-imx"
PREFERRED_VERSION_u-boot-fio:mx8ulp-nxp-bsp ?= "imx-2023.04"
## iMX8ULP LPDDR4 EVK
UBOOT_SIGN_ENABLE:sota:imx8ulp-lpddr4-evk ?= "1"
OSTREE_KERNEL_ARGS:imx8ulp-lpddr4-evk ?= "console=tty1 console=ttyLP1,115200 earlycon rootfstype=ext4"
PREFERRED_PROVIDER_virtual/kernel:imx8ulp-lpddr4-evk ?= "linux-lmp-fslc-imx"
BOOTSCR_LOAD_ADDR:imx8ulp-lpddr4-evk = "0x83500000"
UBOOT_SUFFIX:imx8ulp-lpddr4-evk = "bin"
UBOOT_DTB_NAME:imx8ulp-lpddr4-evk ?= "imx8ulp-evk.dtb"

# NXP i.MX 8QuadMax MEK with secure boot support
SOTA_CLIENT_FEATURES:remove:sota:imx8qm-mek-sec = "ubootenv"

# iMX8MQ
UBOOT_SIGN_ENABLE:sota:mx8mq-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx8mq-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx8mq-generic-bsp = "0x40400000"
UBOOT_DTB_LOADADDRESS:mx8mq-generic-bsp = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:mx8mq-nxp-bsp ?= "imx-atf"
EXTRA_IMAGEDEPENDS:append:mx8mq-generic-bsp = "virtual/trusted-firmware-a"
UBOOT_CLASSES:mx8mq-generic-bsp = "uboot-fitimage"
ATF_BINARY:mx8mq-generic-bsp = "arm-trusted-firmware.bin"
LMP_BOOT_FIRMWARE_FILES:mx8mq-nxp-bsp = "imx-boot imx-boot-nohdmi u-boot.itb"
IMAGE_BOOT_FILES:mx8mq-nxp-bsp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8mq-nxp-bsp = "imx-boot u-boot.itb boot.itb"
WKS_FILE_DEPENDS:append:mx8mq-generic-bsp = " u-boot-default-script imx-boot"
PREFERRED_PROVIDER_u-boot-default-script:mx8mq-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8mq-generic-bsp = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE:sota:mx8mq-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8mq-generic-bsp = " kernel-lmp-fitimage "
PREFERRED_VERSION_u-boot-fio:mx8mq-nxp-bsp ?= "imx-2023.04"
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel:mx8mq-nxp-bsp ?= "linux-lmp-fslc-imx"
WKS_FILE:sota:mx8mq-nxp-bsp = "sdimage-imx8-spl-sota.wks.in"
IMXBOOT_TARGETS:mx8mq-nxp-bsp = "flash_evk_spl"
## iMX8MQ EVK
UBOOT_SIGN_ENABLE:sota:imx8mq-evk ?= "1"
KMACHINE:imx8mq-evk = "imx8mqevk"
OSTREE_KERNEL_ARGS:imx8mq-evk ?= "console=tty1 console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200 rootfstype=ext4"
SOTA_CLIENT_FEATURES:append:imx8mq-evk = " ubootenv"
MACHINE_FEATURES:remove:imx8mq-evk = "qca6174"
MACHINE_FEATURES:append:imx8mq-evk = " bcm4356"
BOOTSCR_LOAD_ADDR:imx8mq-evk = "0x44800000"
MACHINE_EXTRA_RRECOMMENDS:append:imx8mq-evk = " bluetooth-attach"
MACHINE_FIRMWARE:append:imx8mq-evk = " linux-firmware-bcm4356-pcie"
## iMX8MQ EVK with EBBR / SystemReady
UBOOT_SIGN_ENABLE:sota:imx8mq-evk-ebbr ?= ""
KERNEL_IMAGETYPE:sota:imx8mq-evk-ebbr ?= "Image"
KERNEL_CLASSES:sota:imx8mq-evk-ebbr ?= ""
EFI_PROVIDER:imx8mq-evk-ebbr ?= "grub-efi"
OSTREE_BOOTLOADER:imx8mq-evk-ebbr ?= "grub"
OSTREE_KERNEL_ARGS:append:imx8mq-evk-ebbr = " root=LABEL=otaroot"
IMAGE_EFI_BOOT_FILES:sota:imx8mq-evk-ebbr ?= "${@make_efi_dtb_boot_files(d)}"
WKS_FILE:sota:imx8mq-evk-ebbr ?= "efidisk-sota.wks.in"

# iMX8MM
UBOOT_SIGN_ENABLE:sota:mx8mm-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx8mm-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx8mm-generic-bsp = "0x40400000"
UBOOT_DTB_LOADADDRESS:mx8mm-generic-bsp = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:mx8mm-nxp-bsp ?= "imx-atf"
EXTRA_IMAGEDEPENDS:append:mx8mm-nxp-bsp = "virtual/trusted-firmware-a"
UBOOT_CLASSES:mx8mm-generic-bsp = "uboot-fitimage"
ATF_BINARY:mx8mm-generic-bsp = "arm-trusted-firmware.bin"
LMP_BOOT_FIRMWARE_FILES:mx8mm-nxp-bsp = "imx-boot u-boot.itb"
IMAGE_BOOT_FILES:mx8mm-nxp-bsp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8mm-nxp-bsp = "boot.itb"
WKS_FILE_DEPENDS:append:mx8mm-generic-bsp = " u-boot-default-script imx-boot"
PREFERRED_PROVIDER_u-boot-default-script:mx8mm-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8mm-generic-bsp = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE:sota:mx8mm-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8mm-generic-bsp = " kernel-lmp-fitimage "
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel:mx8mm-nxp-bsp ?= "linux-lmp-fslc-imx"
IMXBOOT_TARGETS:mx8mm-nxp-bsp = "flash_evk_spl"
PREFERRED_VERSION_u-boot-fio:mx8mm-nxp-bsp ?= "imx-2023.04"
## LUKS
OSTREE_SPLIT_BOOT:mx8mm-nxp-bsp = "${@bb.utils.contains('DISTRO_FEATURES', 'luks', '1', '0', d)}"
OSTREE_DEPLOY_USR_OSTREE_BOOT:mx8mm-nxp-bsp = "${@bb.utils.contains('DISTRO_FEATURES', 'luks', '1', '0', d)}"
WKS_FILE:sota:mx8mm-nxp-bsp = "${@bb.utils.contains('DISTRO_FEATURES', 'luks', 'sdimage-imx8-spl-split-boot-sota.wks.in', 'sdimage-imx8-spl-sota.wks.in', d)}"
## iMX8MM EVK
UBOOT_SIGN_ENABLE:sota:imx8mm-lpddr4-evk ?= "1"
MACHINE_FIRMWARE:append:imx8mm-lpddr4-evk = " linux-firmware-qca"
KERNEL_DEVICETREE:append:imx8mm-lpddr4-evk = " freescale/imx8mm-evkb.dtb"
KMACHINE:imx8mm-lpddr4-evk = "imx8mmevk"
OSTREE_KERNEL_ARGS:imx8mm-lpddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 rootfstype=ext4"
PREFERRED_PROVIDER_virtual/dtb:imx8mm-lpddr4-evk ?= "lmp-device-tree"
SOTA_CLIENT_FEATURES:append:imx8mm-lpddr4-evk = " ubootenv"
BOOTSCR_LOAD_ADDR:imx8mm-lpddr4-evk = "0x44800000"
## iMX8MM EVK with secure boot support
SOTA_CLIENT_FEATURES:remove:sota:imx8mm-lpddr4-evk-sec = "ubootenv"
## iMX8MM EVK with EBBR / SystemReady
UBOOT_SIGN_ENABLE:sota:imx8mm-lpddr4-evk-ebbr ?= ""
KERNEL_IMAGETYPE:sota:imx8mm-lpddr4-evk-ebbr ?= "Image"
KERNEL_CLASSES:sota:imx8mm-lpddr4-evk-ebbr ?= ""
EFI_PROVIDER:imx8mm-lpddr4-evk-ebbr ?= "grub-efi"
OSTREE_BOOTLOADER:imx8mm-lpddr4-evk-ebbr ?= "grub"
OSTREE_KERNEL_ARGS:append:imx8mm-lpddr4-evk-ebbr = " root=LABEL=otaroot"
IMAGE_EFI_BOOT_FILES:sota:imx8mm-lpddr4-evk-ebbr ?= "${@make_efi_dtb_boot_files(d)}"
WKS_FILE:sota:imx8mm-lpddr4-evk-ebbr ?= "efidisk-sota.wks.in"
# iMX8MM EVKB revision
KERNEL_MODULE_AUTOLOAD:append:imx8mm-lpddr4-evk = " moal"
KERNEL_MODULE_PROBECONF:append:imx8mm-lpddr4-evk = " moal"
module_conf_moal:imx8mm-lpddr4-evk = "options moal mod_para=nxp/wifi_mod_para.conf drvdbg=0x6 sta_name=wlan drv_mode=3"
MACHINE_FEATURES:append:imx8mm-lpddr4-evk = " mxm-mwifiex-load"

# iMX8MP
UBOOT_SIGN_ENABLE:sota:mx8mp-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx8mp-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx8mp-generic-bsp = "0x40400000"
UBOOT_DTB_LOADADDRESS:mx8mp-generic-bsp = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:mx8mp-nxp-bsp ?= "imx-atf"
EXTRA_IMAGEDEPENDS:append:mx8mp-nxp-bsp = "virtual/trusted-firmware-a"
UBOOT_CLASSES:mx8mp-generic-bsp = "uboot-fitimage"
ATF_BINARY:mx8mp-generic-bsp = "arm-trusted-firmware.bin"
LMP_BOOT_FIRMWARE_FILES:mx8mp-nxp-bsp = "imx-boot u-boot.itb"
IMAGE_BOOT_FILES:mx8mp-nxp-bsp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8mp-nxp-bsp = "boot.itb"
WKS_FILE_DEPENDS:append:mx8mp-generic-bsp = " u-boot-default-script imx-boot"
PREFERRED_PROVIDER_u-boot-default-script:mx8mp-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8mp-generic-bsp = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE:sota:mx8mp-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8mp-generic-bsp = " kernel-lmp-fitimage "
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel:mx8mp-nxp-bsp ?= "linux-lmp-fslc-imx"
WKS_FILE:sota:mx8mp-nxp-bsp = "sdimage-imx8-spl-sota.wks.in"
IMXBOOT_TARGETS:mx8mp-nxp-bsp ?= "flash_evk_spl"
PREFERRED_VERSION_u-boot-fio:mx8mp-nxp-bsp ?= "imx-2023.04"
## iMX8MP EVK
UBOOT_SIGN_ENABLE:sota:imx8mp-lpddr4-evk ?= "1"
OSTREE_KERNEL_ARGS:imx8mp-lpddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 rootfstype=ext4"
SOTA_CLIENT_FEATURES:append:imx8mp-lpddr4-evk = " ubootenv"
BOOTSCR_LOAD_ADDR:imx8mp-lpddr4-evk = "0x44800000"
KERNEL_DEVICETREE:append:imx8mp-lpddr4-evk = " freescale/imx8mp-evk-revb4.dtb"
## iMX8MP EVK with secure boot support
UBOOT_SIGN_ENABLE:sota:imx8mp-lpddr4-evk-sec ?= "1"
SOTA_CLIENT_FEATURES:remove:sota:imx8mp-lpddr4-evk-sec = "ubootenv"
## iMX8MP EVK with EBBR / SystemReady
UBOOT_SIGN_ENABLE:sota:imx8mp-lpddr4-evk-ebbr ?= ""
KERNEL_IMAGETYPE:sota:imx8mp-lpddr4-evk-ebbr ?= "Image"
KERNEL_CLASSES:sota:imx8mp-lpddr4-evk-ebbr ?= ""
EFI_PROVIDER:imx8mp-lpddr4-evk-ebbr ?= "grub-efi"
OSTREE_BOOTLOADER:imx8mp-lpddr4-evk-ebbr ?= "grub"
OSTREE_KERNEL_ARGS:append:imx8mp-lpddr4-evk-ebbr = " root=LABEL=otaroot"
IMAGE_EFI_BOOT_FILES:sota:imx8mp-lpddr4-evk-ebbr ?= "${@make_efi_dtb_boot_files(d)}"
WKS_FILE:sota:imx8mp-lpddr4-evk-ebbr ?= "efidisk-sota.wks.in"
# imx8mp comes with an AzureWave CM276MA PCIe Card
KERNEL_MODULE_AUTOLOAD:append:imx8mp-lpddr4-evk = " moal"
KERNEL_MODULE_PROBECONF:append:imx8mp-lpddr4-evk = " moal"
module_conf_moal:imx8mp-lpddr4-evk = "options moal mod_para=nxp/wifi_mod_para.conf drvdbg=0x6 sta_name=wlan drv_mode=3"
MACHINE_FEATURES:append:imx8mp-lpddr4-evk = " mxm-mwifiex-load"

# iMX8MN
UBOOT_SIGN_ENABLE:sota:mx8mn-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx8mn-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx8mn-generic-bsp = "0x40400000"
UBOOT_DTB_LOADADDRESS:mx8mn-generic-bsp = "0x43000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:mx8mn-generic-bsp ?= "imx-atf"
EXTRA_IMAGEDEPENDS:append:mx8mn-generic-bsp = "virtual/trusted-firmware-a"
UBOOT_CLASSES:mx8mn-generic-bsp = "uboot-fitimage"
ATF_BINARY:mx8mn-generic-bsp = "arm-trusted-firmware.bin"
LMP_BOOT_FIRMWARE_FILES:mx8mn-generic-bsp = "imx-boot u-boot.itb"
IMAGE_BOOT_FILES:mx8mn-generic-bsp = "imx-boot u-boot.itb ${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx8mn-generic-bsp = "boot.itb"
WKS_FILE_DEPENDS:append:mx8mn-generic-bsp = " u-boot-default-script imx-boot"
PREFERRED_PROVIDER_u-boot-default-script:mx8mn-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx8mn-generic-bsp = "u-boot-ostree-scr-fit"
KERNEL_IMAGETYPE:sota:mx8mn-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx8mn-generic-bsp = " kernel-lmp-fitimage "
PREFERRED_VERSION_u-boot-fio:mx8mn-nxp-bsp ?= "imx-2023.04"
## iMX8: Use latest NXP BSP downstream kernel
PREFERRED_PROVIDER_virtual/kernel:mx8mn-generic-bsp ?= "linux-lmp-fslc-imx"
WKS_FILE:sota:mx8mn-generic-bsp = "sdimage-imx8-spl-sota.wks.in"
# iMX8MN DDR4 EVK
UBOOT_SIGN_ENABLE:sota:imx8mn-ddr4-evk ?= "1"
KMACHINE:imx8mn-ddr4-evk = "imx8mn-evk"
OSTREE_KERNEL_ARGS:imx8mn-ddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 rootfstype=ext4"
SOTA_CLIENT_FEATURES:append:imx8mn-ddr4-evk = " ubootenv"
BOOTSCR_LOAD_ADDR:imx8mn-ddr4-evk = "0x44800000"
MACHINE_EXTRA_RRECOMMENDS:append:imx8mn-ddr4-evk = " bluetooth-attach"
IMXBOOT_TARGETS:imx8mn-ddr4-evk ?= "flash_evk_spl_ddr4"
## iMX8MN DDR4 EVK with secure boot support
SOTA_CLIENT_FEATURES:remove:sota:imx8mn-ddr4-evk-sec = "ubootenv"
# iMX8MN LPDDR4 EVK
UBOOT_SIGN_ENABLE:sota:imx8mn-lpddr4-evk ?= "1"
KMACHINE:imx8mn-lpddr4-evk = "imx8mn-evk"
OSTREE_KERNEL_ARGS:imx8mn-lpddr4-evk ?= "console=tty1 console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 rootfstype=ext4"
SOTA_CLIENT_FEATURES:append:imx8mn-lpddr4-evk = " ubootenv"
BOOTSCR_LOAD_ADDR:imx8mn-lpddr4-evk = "0x44800000"
MACHINE_EXTRA_RRECOMMENDS:append:imx8mn-lpddr4-evk = " bluetooth-attach"
IMXBOOT_TARGETS:imx8mn-lpddr4-evk ?= "flash_evk_spl"
MACHINE_FEATURES:append:imx8mn-lpddr4-evk = " mxm-mwifiex-load"
## iMX8MN LPDDR4 EVK with secure boot support
SOTA_CLIENT_FEATURES:remove:sota:imx8mn-lpddr4-evk-sec = "ubootenv"

# iMX93
UBOOT_SIGN_ENABLE:sota:mx93-generic-bsp ??= "1"
IMX_DEFAULT_BOOTLOADER:mx93-generic-bsp ?= "u-boot-fio"
UBOOT_ENTRYPOINT:mx93-generic-bsp = "0x80400000"
UBOOT_LOADADDRESS:mx93-generic-bsp = "0x80400000"
UBOOT_DTB_LOADADDRESS:mx93-generic-bsp = "0x83000000"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:mx93-nxp-bsp ?= "imx-atf"
UBOOT_CLASSES:mx93-generic-bsp = "uboot-fitimage"
IMXBOOT_TARGETS:mx93-nxp-bsp ?= "flash_singleboot_spl"
ATF_BINARY:mx93-generic-bsp = "arm-trusted-firmware.bin"
EXTRA_IMAGEDEPENDS:append:mx93-generic-bsp = "virtual/trusted-firmware-a"
KERNEL_IMAGETYPE:sota:mx93-generic-bsp = "fitImage"
KERNEL_CLASSES:sota:mx93-generic-bsp = " kernel-lmp-fitimage "
WKS_FILE:sota:mx93-generic-bsp = "emmc-imx-gpt-sota.wks"
WKS_FILE_DEPENDS:append:mx93-generic-bsp = " u-boot-default-script imx-boot"
IMAGE_BOOT_FILES:mx93-generic-bsp = "${KERNEL_IMAGETYPE} ${@make_dtb_boot_files(d)} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:mx93-generic-bsp = "boot.itb"
PREFERRED_PROVIDER_u-boot-default-script:mx93-generic-bsp = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:mx93-generic-bsp = "u-boot-ostree-scr-fit"
SOTA_CLIENT_FEATURES:append:mx93-generic-bsp = " ubootenv"
LMP_BOOT_FIRMWARE_FILES:mx93-nxp-bsp = "imx-boot u-boot.itb"
PREFERRED_VERSION_optee-os-fio:mx93-nxp-bsp = "3.21.0-imx"
PREFERRED_VERSION_optee-os-fio-mfgtool:mx93-nxp-bsp = "3.21.0-imx"
PREFERRED_VERSION_optee-os-tadevkit:mx93-nxp-bsp = "3.21.0-imx"
PREFERRED_PROVIDER_virtual/kernel:mx93-nxp-bsp ?= "linux-lmp-fslc-imx"
PREFERRED_VERSION_u-boot-fio:mx93-nxp-bsp ?= "imx-2023.04"
## iMX93 DDR4 EVK
UBOOT_SIGN_ENABLE:sota:imx93-11x11-lpddr4x-evk ?= "1"
OSTREE_KERNEL_ARGS:imx93-11x11-lpddr4x-evk ?= "console=tty1 console=ttyLP0,115200 earlycon rootfstype=ext4"
BOOTSCR_LOAD_ADDR:imx93-11x11-lpddr4x-evk = "0x83500000"
UBOOT_SUFFIX:imx93-11x11-lpddr4x-evk = "bin"
UBOOT_DTB_NAME:imx93-11x11-lpddr4x-evk ?= "imx93-11x11-evk.dtb"

# STM32MP1
### STM32 custom image.bin symlink
stm32_imagebin_symlink() {
       ln -sf ${LMP_FLASHLAYOUT_IMAGE} ${IMGDEPLOYDIR}/${MFGTOOL_FLASH_IMAGE}.bin
}

STM32_IMAGEBIN_SYMLINK = ""
STM32_IMAGEBIN_SYMLINK:stm32mp1common = "stm32-imagebin-symlink"
IMAGE_TYPES += "${STM32_IMAGEBIN_SYMLINK}"
IMAGE_FSTYPES += "${STM32_IMAGEBIN_SYMLINK}"
IMAGE_CMD:stm32-imagebin-symlink = "stm32_imagebin_symlink"
PREFERRED_PROVIDER_virtual/kernel:stm32mp1common ?= "linux-lmp"
PREFERRED_PROVIDER_virtual/bootloader:stm32mp1common ?= "u-boot-fio"
PREFERRED_PROVIDER_u-boot:stm32mp1common ?= "u-boot-fio"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:stm32mp1common = "tf-a-fio"
MACHINE_EXTRA_RRECOMMENDS:remove:stm32mp1common = "u-boot-fw-config-stm32mp"
MACHINE_EXTRA_RRECOMMENDS:append:stm32mp1common = " linux-firmware-bcm43430"
KERNEL_ALT_IMAGETYPE:stm32mp1common = ""
KERNEL_CLASSES:stm32mp1common ?= " kernel-lmp-fitimage "
OSTREE_KERNEL:stm32mp1common = "${KERNEL_IMAGETYPE}-${INITRAMFS_IMAGE}-${MACHINE}-${MACHINE}"
OSTREE_KERNEL_ARGS:stm32mp1common ?= "console=ttySTM0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"
PREFERRED_VERSION_gcc-arm-none-eabi-native:stm32mp1common = "11"
IMAGE_CLASSES:remove:stm32mp1common = "st-partitions-image"
IMAGE_CLASSES:remove:stm32mp1common = "image_types-stubi"
IMAGE_ROOTFS_MAXSIZE:stm32mp1common = ""
PREFERRED_PROVIDER_virtual/optee-os:stm32mp1common ?= "optee-os-fio"
MACHINE_EXTRA_RRECOMMENDS:remove:stm32mp1common = "kernel-imagebootfs"
MACHINE_EXTRA_RRECOMMENDS:remove:stm32mp1common = "alsa-state-stm32mp1"
BOOTSCHEME_LABELS:stm32mp1common += "optee"
BOOTSCHEME_LABELS:stm32mp1common:remove = "trusted"
UBOOT_SUFFIX:stm32mp1common = "bin"
ST_BOOTFS:stm32mp1common = "0"
ST_VENDORFS:stm32mp1common = "0"
ST_USERFS:stm32mp1common = "0"
M4_INSTALLDIR:stm32mp1common = "${prefix}"
UBOOT_LOADADDRESS:stm32mp1common = "0xC2000000"
UBOOT_ENTRYPOINT:stm32mp1common = "0xC2000000"
UBOOT_DTB_LOADADDRESS:stm32mp1common = "0xC4000000"
KERNEL_IMAGETYPE:stm32mp1common ?= "zImage"
KERNEL_IMAGETYPE:sota:stm32mp1common ?= "fitImage"
WKS_FILE_DEPENDS:append:stm32mp1common = " e2fsprogs-native"
MACHINE_FEATURES:remove:stm32mp1common = "fw-update"
PREFERRED_PROVIDER_u-boot-default-script:stm32mp1common = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:stm32mp1common = "u-boot-ostree-scr-fit"
# Remove standard ST BSP from SDK
TOOLCHAIN_HOST_TASK:remove:stm32mp1common = "${ST_TOOLS_FOR_SDK} ${ST_DEPENDENCIES_BUILD_FOR_SDK}"
STM32_BOOTIMAGE_SUFFIX ??= ""
MFGTOOL_FLASH_IMAGE:stm32mp1common ?= "${IMAGE_BASENAME}-${MACHINE}"
LMP_FLASHLAYOUT_IMAGE = "${MFGTOOL_FLASH_IMAGE}.ext4"
LMP_FLASHLAYOUT_IMAGE:sota = "${MFGTOOL_FLASH_IMAGE}.ota-ext4"
# Definitions used by flashlayout-stm32mp.class provided by ST layer for TSV file creation
FLASHLAYOUT_BOOTSCHEME_LABELS = "lmp"
FLASHLAYOUT_CONFIG_LABELS:lmp:stm32mp15-disco = "sdcard"
FLASHLAYOUT_CONFIG_LABELS:lmp:stm32mp15-eval = "emmc"
FLASHLAYOUT_TYPE_LABELS:lmp = "${STM32MP_DEVICETREE}"
## USB FSBL
FLASHLAYOUT_PARTITION_OFFSET:lmp:fsbl-boot = "0x0"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:fsbl-boot = "arm-trusted-firmware/tf-a-${LMP_FLASHLAYOUT_BOARD_NAME}-usb${STM32_BOOTIMAGE_SUFFIX}.stm32"
## USB FIP
FLASHLAYOUT_PARTITION_OFFSET:lmp:fip-boot = "0x0"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:fip-boot = "fip/fip-${LMP_FLASHLAYOUT_BOARD_NAME}-optee.bin"
FLASHLAYOUT_PARTITION_TYPE:lmp:fip-boot = "Binary"
## eMMC
FLASHLAYOUT_PARTITION_LABELS:lmp:emmc = "${FLASHLAYOUT_PROGRAMMER_SECTIONS} fsbl1 fsbl2 u-boot-env rootfs"
FLASHLAYOUT_PARTITION_DEVICE:lmp:emmc = "none:${FLASHLAYOUT_PROGRAMMER_SECTIONS},${DEVICE:EMMC}:fsbl1 fsbl2 u-boot-env rootfs"
# FSBL1
FLASHLAYOUT_PARTITION_ENABLE:lmp:emmc:fsbl1 = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:emmc:fsbl1 = "boot1"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:emmc:fsbl1 = "fip/combo-emmc-tfa-fip-${LMP_FLASHLAYOUT_BOARD_NAME}.bin"
# FSBL2
FLASHLAYOUT_PARTITION_ENABLE:lmp:emmc:fsbl2 = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:emmc:fsbl2 = "boot2"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:emmc:fsbl2 = "fip/combo-emmc-tfa-fip-${LMP_FLASHLAYOUT_BOARD_NAME}.bin"
# U-Boot env
FLASHLAYOUT_PARTITION_ENABLE:lmp:emmc:u-boot-env = "PED"
FLASHLAYOUT_PARTITION_OFFSET:lmp:emmc:u-boot-env = "0x00080000"
FLASHLAYOUT_PARTITION_TYPE:lmp:emmc:u-boot-env = "Binary"
# RootFS
FLASHLAYOUT_PARTITION_ENABLE:lmp:emmc:rootfs = "P"
FLASHLAYOUT_PARTITION_OFFSET:lmp:emmc:rootfs = "0x00100000"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:emmc:rootfs = "${MFGTOOL_FLASH_IMAGE}.bin"
FLASHLAYOUT_PARTITION_TYPE:lmp:emmc:rootfs = "System"
## SDCARD
FLASHLAYOUT_PARTITION_LABELS:lmp:sdcard = "${FLASHLAYOUT_PROGRAMMER_SECTIONS} fsbl1 fsbl2 fip-a fip-b u-boot-env rootfs"
FLASHLAYOUT_PARTITION_DEVICE:lmp:sdcard = "none:${FLASHLAYOUT_PROGRAMMER_SECTIONS},${DEVICE:SDCARD}:fsbl1 fsbl2 fip-a fip-b u-boot-env rootfs"
# FSBL1
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:fsbl1 = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:fsbl1 = "0x00004400"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:sdcard:fsbl1 = "arm-trusted-firmware/tf-a-${LMP_FLASHLAYOUT_BOARD_NAME}-sdcard${STM32_BOOTIMAGE_SUFFIX}.stm32"
# FSBL2
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:fsbl2 = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:fsbl2 = "0x00044400"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:sdcard:fsbl2 = "arm-trusted-firmware/tf-a-${LMP_FLASHLAYOUT_BOARD_NAME}-sdcard${STM32_BOOTIMAGE_SUFFIX}.stm32"
# FIP-A
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:fip-a = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:fip-a = "0x00084400"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:sdcard:fip-a = "fip/fip-${LMP_FLASHLAYOUT_BOARD_NAME}-optee.bin"
FLASHLAYOUT_PARTITION_TYPE:lmp:sdcard:fip-a = "Binary"
# FIP-B
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:fip-b = "PD"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:fip-b = "0x00484400"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:sdcard:fip-b = "fip/fip-${LMP_FLASHLAYOUT_BOARD_NAME}-optee.bin"
FLASHLAYOUT_PARTITION_TYPE:lmp:sdcard:fip-b = "Binary"
# U-Boot env
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:u-boot-env = "PED"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:u-boot-env = "0x00900000"
FLASHLAYOUT_PARTITION_TYPE:lmp:sdcard:u-boot-env = "Binary"
# RootFS
FLASHLAYOUT_PARTITION_ENABLE:lmp:sdcard:rootfs = "P"
FLASHLAYOUT_PARTITION_OFFSET:lmp:sdcard:rootfs = "0x00910000"
FLASHLAYOUT_PARTITION_BIN2LOAD:lmp:sdcard:rootfs = "${MFGTOOL_FLASH_IMAGE}.bin"
FLASHLAYOUT_PARTITION_TYPE:lmp:sdcard:rootfs = "System"

## stm32mp15-eval
TF_A_SIGN_ENABLE:sota:stm32mp15-eval = "1"
UBOOT_SIGN_ENABLE:sota:stm32mp15-eval = "1"
BOOTDEVICE_LABELS:append:stm32mp15-eval = " emmc"
LINUX_A7_EXAMPLES_DT:remove:stm32mp15-eval = "stm32mp157c-ev1-a7-examples stm32mp157f-ev1-a7-examples"
CUBE_M4_EXAMPLES_DT:remove:stm32mp15-eval = "stm32mp157c-ev1-m4-examples stm32mp157f-ev1-m4-examples"
STM32MP_DT_FILES_EV:stm32mp15-eval = "stm32mp157c-ev1"
STM32MP_DT_FILES_EV:remove:stm32mp15-eval = "stm32mp157f-ev1"
STM32MP_DT_FILES_EMMC:remove:stm32mp15-eval = "stm32mp157f-ev1"
STM32MP_DT_FILES_NAND:remove:stm32mp15-eval = "stm32mp157f-ev1"
STM32MP_DT_FILES_NOR:remove:stm32mp15-eval = "stm32mp157f-ev1"
STM32MP_DT_FILES_SDCARD:remove:stm32mp15-eval = "stm32mp157f-ev1"
STM32MP_DT_FILES_SDCARD:append:stm32mp15-eval = " stm32mp157c-ev1"
STM32MP_DT_FILES_EMMC:append:stm32mp15-eval = " stm32mp157c-ev1"
STM32MP_DT_FILES_NAND:append:stm32mp15-eval = " stm32mp157c-ev1"
STM32MP_DT_FILES_NOR:append:stm32mp15-eval = " stm32mp157c-ev1"
SOTA_CLIENT_FEATURES:append:stm32mp15-eval = " ubootenv"
IMAGE_FSTYPES:remove:stm32mp15-eval = "wic wic.gz wic.bmap"
IMAGE_FSTYPES:append:stm32mp15-eval = " ext4"
IMAGE_FSTYPES:remove:sota:stm32mp15-eval = "ext4"
LMP_FLASHLAYOUT_BOARD_NAME:stm32mp15-eval = "stm32mp157c-ev1"
LMP_BOOT_FIRMWARE_FILES:stm32mp15-eval = "arm-trusted-firmware/tf-a-stm32mp157c-ev1-emmc.stm32 fip/fip-stm32mp157c-ev1-optee.bin"
MACHINE_ESSENTIAL_EXTRA_RDEPENDS:append:stm32mp15-eval = " kernel kernel-devicetree u-boot-default-script"
MACHINE_ESSENTIAL_EXTRA_RDEPENDS:remove:sota:stm32mp15-eval = "kernel kernel-devicetree u-boot-default-script"
KERNEL_DEVICETREE:stm32mp15-eval = "${LMPSTAGING_KERN_ADD_ST_SUBDIR}stm32mp157c-ev1-scmi.dtb"
## stm32mp15-disco
TF_A_SIGN_ENABLE:sota:stm32mp15-disco = "1"
UBOOT_SIGN_ENABLE:sota:stm32mp15-disco = "1"
LINUX_A7_EXAMPLES_DT:remove:stm32mp15-disco = "stm32mp157c-dk2-a7-examples stm32mp157f-dk2-a7-examples"
CUBE_M4_EXAMPLES_DT:remove:stm32mp15-disco = "stm32mp157c-dk2-m4-examples stm32mp157f-dk2-m4-examples"
STM32MP_DT_FILES_SDCARD:remove:stm32mp15-disco = "stm32mp157f-dk2"
STM32MP_DT_FILES_SDCARD:append:stm32mp15-disco = " stm32mp157c-dk2"
STM32MP_DT_FILES_DK:stm32mp15-disco = "stm32mp157c-dk2"
STM32MP_DT_FILES_DK:remove:stm32mp15-disco = "stm32mp157f-dk2"
SOTA_CLIENT_FEATURES:append:stm32mp15-disco = " ubootenv"
IMAGE_FSTYPES:append:stm32mp15-disco = " ext4"
IMAGE_FSTYPES:remove:sota:stm32mp15-disco = "ext4"
LMP_FLASHLAYOUT_BOARD_NAME:stm32mp15-disco = "stm32mp157c-dk2"
IMAGE_BOOT_FILES:stm32mp15-disco = "${KERNEL_IMAGETYPE} ${KERNEL_DEVICETREE} boot.scr uEnv.txt"
IMAGE_BOOT_FILES:sota:stm32mp15-disco = ""
EXTRA_IMAGEDEPENDS:remove:stm32mp15-disco = "sdcard-raw-tools-native"
WKS_FILE_DEPENDS:append:stm32mp15-disco = " u-boot-default-script"
WKS_FILE_DEPENDS:remove:stm32mp15-disco = "st-image-bootfs st-image-userfs"
WKS_FILE:stm32mp15-disco = "sdimage-stm32mp157c-dk2-optee.wks.in"
WKS_FILE:sota:stm32mp15-disco = "sdimage-stm32mp157c-dk2-optee-sota.wks.in"
LMP_BOOT_FIRMWARE_FILES:stm32mp15-disco = "arm-trusted-firmware/tf-a-stm32mp157c-dk2-sdcard.stm32 fip/fip-stm32mp157c-dk2-optee.bin"
KERNEL_DEVICETREE:stm32mp15-disco = "${LMPSTAGING_KERN_ADD_ST_SUBDIR}stm32mp157c-dk2-scmi.dtb"
## stm32mp15-eval-sec
SOTA_CLIENT_FEATURES:remove:sota:stm32mp15-eval-sec = "ubootenv"

# Xilinx
USE_XSCT_TARBALL:zynqmp = "1"
## Avnet UltraZed with secure boot support
UBOOT_SIGN_ENABLE:sota:uz3eg-iocc-sec = "1"
SOTA_CLIENT_FEATURES:remove:sota:uz3eg-iocc-sec = "ubootenv"
LMP_BOOT_FIRMWARE_VERSION:uz3eg-iocc-sec = "8"
## Avnet UltraZed with secure boot support and EBBR
UBOOT_SPL_SIGN_ENABLE:sota:uz3eg-iocc-ebbr-sec = "1"
UBOOT_SIGN_ENABLE:sota:uz3eg-iocc-ebbr-sec = "0"

## Xilinx Versal
USE_XSCT_TARBALL:versal = "1"
PREFERRED_PROVIDER_u-boot:versal = "u-boot-xlnx"
PREFERRED_PROVIDER_u-boot-fw-utils:versal = "libubootenv"
PREFERRED_RPROVIDER_u-boot-fw-utils:versal = "libubootenv"
SOTA_CLIENT_FEATURES:append:versal = " ubootenv"
WKS_FILE_DEPENDS:append:sota:versal = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:versal = "u-boot-base-scr"
PREFERRED_PROVIDER_u-boot-default-script:sota:versal = "u-boot-ostree-scr-fit"
PREFERRED_PROVIDER_virtual/kernel:versal = "linux-lmp-xlnx"
PREFERRED_PROVIDER_virtual/dtb:versal = "device-tree"
PREFERRED_PROVIDER_virtual/trusted-firmware-a:versal = "arm-trusted-firmware"
MACHINE_FEATURES:append:versal = " optee"
EXTRA_IMAGEDEPENDS:remove:versal = "qemu-devicetrees"
UBOOT_ENTRYPOINT:versal = "0x18000000"
OSTREE_KERNEL_ARGS:versal ?= "console=ttyAMA0,115200 earlycon=pl011,mmio32,0xFF000000,115200n8 clk_ignore_unused ${OSTREE_KERNEL_ARGS_COMMON}"
KERNEL_IMAGETYPE:sota:versal = "fitImage"
KERNEL_CLASSES:sota:versal = "kernel-lmp-fitimage"
IMAGE_BOOT_FILES:sota:versal = "boot.bin boot.itb"
WKS_FILES:sota:versal = "sdimage-sota.wks"

# TI Generic (BSP)
TI_TMPDIR_APPEND = ""
TI_COMMON_DEPLOY = "${DEPLOY_DIR}"
UBOOT_SIGN_ENABLE:sota:k3 = "1"
UBOOT_SIGN_KEYDIR:k3 ?= "${TOPDIR}/conf/keys"
FIT_HASH_ALG:sota:k3 ?= "sha256"
FIT_SIGN_ALG:sota:k3 ?= "rsa2048"
KERNEL_IMAGETYPE:sota:k3 = "fitImage"
KERNEL_IMAGETYPES:sota:k3 = "${KERNEL_IMAGETYPE} ${@bb.utils.contains('MACHINE_FEATURES', 'jailhouse', 'Image', '', d)}"
PREFERRED_PROVIDER_virtual/kernel:k3 ?= "linux-lmp-ti-staging"
WKS_FILE_DEPENDS:append:k3 = " virtual/bootloader"
OSTREE_DEPLOY_USR_OSTREE_BOOT:k3 = "1"
MACHINE_ESSENTIAL_EXTRA_RDEPENDS:remove:k3 = "kernel-image-image"

# TI AM62x
MACHINE_FEATURES:append:am62xx = " optee"
PREFERRED_PROVIDER_u-boot-fw-utils:am62xx = "libubootenv"
PREFERRED_RPROVIDER_u-boot-fw-utils:am62xx = "libubootenv"
# only need boot script for sota builds
WKS_FILE_DEPENDS:append:sota:am62xx = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:sota:am62xx = "u-boot-ostree-scr-fit"
KERNEL_CLASSES:sota:am62xx = " kernel-lmp-fitimage "
IMAGE_BOOT_FILES:append:am62xx = " boot.itb"
UBOOT_ENTRYPOINT:am62xx = "0x82000000"
UBOOT_LOADADDRESS:am62xx = "0x82000000"
UBOOT_DTB_LOADADDRESS:am62xx = "0x88000000"
UBOOT_DTBO_LOADADDRESS:am62xx = "0x89000000"
EFI_PROVIDER:am62xx = ""
LMP_BOOT_FIRMWARE_FILES:am62xx = "tispl.bin u-boot.img tiboot3-am62x-gp-evm.bin tiboot3-am62x-hs-evm.bin tiboot3-am62x-hs-fs-evm.bin"
LMP_BOOT_FIRMWARE_FILES:append:sota:am62xx = " boot.itb"
## am62xx-evm
SOTA_CLIENT_FEATURES:append:am62xx-evm = " ubootenv"
KERNEL_DEVICETREE:append:am62xx-evm = " ${@bb.utils.contains('MACHINE_FEATURES', 'jailhouse', 'ti/k3-am625-base-board-jailhouse.dtbo', '', d)}"
KERNEL_MODULE_AUTOLOAD:append:am62xx-evm = " ${@bb.utils.contains('MACHINE_FEATURES', 'jailhouse', 'jailhouse uio_ivshmem', '', d)}"
## beagleplay
SOTA_CLIENT_FEATURES:append:beagleplay = " ubootenv"
KERNEL_DEVICETREE:beagleplay = "ti/k3-am625-beagleplay.dtb ti/k3-am625-beagleplay-csi2-ov5640.dtbo ti/k3-am625-beagleplay-csi2-tevi-ov5640.dtbo"
MACHINE_EXTRA_RRECOMMENDS:append:beagleplay = " wl18xx-calibrator wl18xx-target-scripts wl18xx-fw wlconf"

# TI AM64x
MACHINE_FEATURES:append:am64xx = " optee"
PREFERRED_PROVIDER_u-boot-fw-utils:am64xx = "libubootenv"
PREFERRED_RPROVIDER_u-boot-fw-utils:am64xx = "libubootenv"
# only need boot script for sota builds
WKS_FILE_DEPENDS:append:sota:am64xx = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:sota:am64xx = "u-boot-ostree-scr-fit"
KERNEL_CLASSES:sota:am64xx = " kernel-lmp-fitimage "
IMAGE_BOOT_FILES:append:am64xx = " boot.itb"
UBOOT_ENTRYPOINT:am64xx = "0x82000000"
UBOOT_LOADADDRESS:am64xx = "0x82000000"
UBOOT_DTB_LOADADDRESS:am64xx = "0x88000000"
EFI_PROVIDER:am64xx = ""
LMP_BOOT_FIRMWARE_FILES:am64xx = "tispl.bin u-boot.img tiboot3.bin"
LMP_BOOT_FIRMWARE_FILES:append:sota:am64xx = " boot.itb"
## am64xx-evm
SOTA_CLIENT_FEATURES:append:am64xx-evm = " ubootenv"

# Nvidia Tegra
EXTRA_IMAGEDEPENDS:append:tegra = " virtual/secure-os virtual/bootloader"
DISTRO_FEATURES:append:tegra = " opengl"
DISTRO_FEATURES_DEFAULT:remove:tegra = "modsign"
PREFERRED_PROVIDER_virtual/kernel:tegra ?= "linux-tegra"
IMAGE_TEGRAFLASH_FS_TYPE:sota:tegra = "${@bb.utils.contains('TEGRA_EXTERNAL_ROOTFS_WIC', '1', 'wic.gz', 'ota-ext4', d)}"
IMAGE_FSTYPES:remove:tegra = "${@bb.utils.contains('TEGRA_EXTERNAL_ROOTFS_WIC', '1', '', 'wic wic.gz wic.bmap', d)}"
TEGRA_INITRAMFS_FSTYPES:tegra = ""
INITRD_IMAGE:tegra = ""
IMAGE_TEGRAFLASH_KERNEL:tegra = "${DEPLOY_DIR_IMAGE}/${KERNEL_IMAGETYPE}"
WKS_FILE:tegra:sota ?= "efidisk-sota.wks.in"
IMAGE_ROOTFS_SIZE:tegra = "65536"
PREFERRED_PROVIDER_virtual/bootloader:tegra ?= "edk2-firmware-tegra"
OSTREE_LOADER_LINK:tegra = "0"
OSTREE_BOOTLOADER:tegra ?= "syslinux"
OSTREE_DEPLOY_DEVICETREE:tegra = "1"
PREFERRED_PROVIDER_virtual/optee-os:tegra = "optee-os"
MACHINE_FEATURES:append:tegra = " optee"
## jetson-agx-xavier-devkit (tegra194)
OSTREE_KERNEL_ARGS:tegra194 ?= "\${cbootargs} ${OSTREE_KERNEL_ARGS_COMMON} rootwait mminit_loglevel=4 console=tty0 console=ttyTCU0,115200 fbcon=map:0 video=efifb:off sdhci_tegra.en_boot_part_access=1"
## jetson-agx-orin-devkit (tegra234)
OSTREE_KERNEL_ARGS:tegra234 ?= "${OSTREE_KERNEL_ARGS_COMMON} rootwait mminit_loglevel=4 console=tty0 console=ttyTCU0,115200 fbcon=map:0 video=efifb:off"

# Allwinner (sun8i)
PREFERRED_PROVIDER_virtual/bootloader:sun8i = "u-boot-fio"
PREFERRED_PROVIDER_u-boot:sun8i = "u-boot-fio"
UBOOT_ENTRYPOINT:sun8i = "0x42000000"
WKS_FILE_DEPENDS:append:sun8i = " u-boot-default-script"
PREFERRED_PROVIDER_u-boot-default-script:sun8i = "u-boot-ostree-scr-fit"
IMAGE_BOOT_FILES:sun8i = "boot.itb"
KERNEL_IMAGETYPE:sun8i = "fitImage"
KERNEL_CLASSES:sun8i = " kernel-lmp-fitimage "
WKS_FILES:sota:sun8i = "sdimage-sunxi-sota.wks.in"
IMAGE_FSTYPES:remove:sun8i = "sunxi-sdimg"
SOTA_CLIENT_FEATURES:append:sun8i = " ubootenv"
OSTREE_KERNEL_ARGS:sun8i ?= "earlycon console=ttyS0,115200 ${OSTREE_KERNEL_ARGS_COMMON}"

# Cross machines / BSPs
## iMX targets should use the u-boot release based on the NXP BSP
PREFERRED_VERSION_u-boot-fio:imx-nxp-bsp ?= "imx-2022.04"
## Prefer OP-TEE releases from our layer instead of using the .imx fork
PREFERRED_VERSION_optee-client:mx8-nxp-bsp = "3.21.0"
PREFERRED_VERSION_optee-client:mx9-nxp-bsp = "3.21.0"
PREFERRED_VERSION_optee-examples:mx8-nxp-bsp = "3.21.0"
PREFERRED_VERSION_optee-examples:mx9-nxp-bsp = "3.21.0"
PREFERRED_VERSION_optee-test:mx8-nxp-bsp = "3.21.0"
PREFERRED_VERSION_optee-test:mx9-nxp-bsp = "3.21.0"
## No need to install u-boot, already a WKS dependency
MACHINE_ESSENTIAL_EXTRA_RDEPENDS:remove:imx-generic-bsp = "u-boot-fslc"
## OP-TEE is a dependency of u-boot (fit), no need for WKS_FILE_DEPENDS
OPTEE_WKS_FILE_DEPENDS:imx-generic-bsp = ""
# Use latest SDMA firmware from firmware-imx instead of upstream linux-firmware
MACHINE_FIRMWARE:remove:mx6-nxp-bsp = "linux-firmware-imx-sdma-imx6q"
MACHINE_FIRMWARE:remove:mx8-nxp-bsp = "linux-firmware-imx-sdma-imx7d"
MACHINE_FIRMWARE:append:mx6-nxp-bsp = " firmware-imx-sdma-imx6q firmwared"
MACHINE_FIRMWARE:append:mx8-nxp-bsp = " firmware-imx-sdma-imx7d firmwared"

### Tegra custom LmP hook
TEGRA_EXTERNAL_ROOTFS_WIC ??= "0"
tegraflash_custom_post:append:tegra() {
	echo EXTERNAL_ROOTFS_WIC_FLASH=\"${TEGRA_EXTERNAL_ROOTFS_WIC}\" >> .env.initrd-flash
}
