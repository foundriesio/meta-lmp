From 0ebb379dff45608cb65f6ca2aae7046cdccdedf7 Mon Sep 17 00:00:00 2001
From: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
Date: Sun, 5 Feb 2023 18:46:32 +0200
Subject: [PATCH] build: add initial support for building

Enable the project building and running in non-interactive mode
with BSD-3-Clause licensed library libedit instead of GPLv3+ licensed
library readline.

Upstream-Status: Pending
Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>

---
 Makefile.am                   |  2 +-
 Makefile.tools                | 18 +++++++++---------
 attrib/interactive.c          | 10 ++++++++++
 client/display.c              | 15 +++++++++++++++
 configure.ac                  |  2 ++
 src/shared/shell.c            | 26 ++++++++++++++++++++++++++
 tools/mesh-gatt/onoff-model.c |  6 ++++++
 tools/mesh-gatt/prov.c        |  5 +++++
 tools/obex-client-tool.c      |  4 ++++
 9 files changed, 78 insertions(+), 10 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 25966cd..438256f 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -25,7 +25,7 @@ pkgincludedir = $(includedir)/bluetooth
 pkginclude_HEADERS =
 
 AM_CFLAGS = $(MISC_CFLAGS) $(WARNING_CFLAGS) $(UDEV_CFLAGS) $(LIBEBOOK_CFLAGS) \
-				$(LIBEDATASERVER_CFLAGS) $(ell_cflags)
+				$(LIBEDATASERVER_CFLAGS) $(READLINE_CFLAGS) $(ell_cflags)
 AM_LDFLAGS = $(MISC_LDFLAGS)
 
 confdir = $(sysconfdir)/bluetooth
diff --git a/Makefile.tools b/Makefile.tools
index 4bc355c..4c7114f 100644
--- a/Makefile.tools
+++ b/Makefile.tools
@@ -13,7 +13,7 @@ client_bluetoothctl_SOURCES = client/main.c \
 					client/admin.h client/admin.c \
 					client/player.h client/player.c
 client_bluetoothctl_LDADD = gdbus/libgdbus-internal.la src/libshared-glib.la \
-				$(GLIB_LIBS) $(DBUS_LIBS) -lreadline
+				$(GLIB_LIBS) $(DBUS_LIBS) $(READLINE_LIBS)
 endif
 
 if ZSH_COMPLETIONS
@@ -372,7 +372,7 @@ tools_meshctl_SOURCES = tools/meshctl.c \
 				tools/mesh-gatt/onoff-model.c
 tools_meshctl_LDADD = gdbus/libgdbus-internal.la src/libshared-glib.la \
 				lib/libbluetooth-internal.la \
-				$(GLIB_LIBS) $(DBUS_LIBS) -ljson-c -lreadline
+				$(GLIB_LIBS) $(DBUS_LIBS) -ljson-c $(READLINE_LIBS)
 
 EXTRA_DIST += tools/mesh-gatt/local_node.json tools/mesh-gatt/prov_db.json
 endif
@@ -391,7 +391,7 @@ tools_mesh_cfgclient_SOURCES = tools/mesh-cfgclient.c \
 				mesh/crypto.h mesh/crypto.c
 
 tools_mesh_cfgclient_LDADD = lib/libbluetooth-internal.la src/libshared-ell.la \
-						$(ell_ldadd) -ljson-c -lreadline
+						$(ell_ldadd) -ljson-c $(READLINE_LIBS)
 
 bin_PROGRAMS +=  tools/mesh-cfgtest
 
@@ -487,7 +487,7 @@ noinst_PROGRAMS += tools/btmgmt tools/obex-client-tool tools/obex-server-tool \
 tools_obex_client_tool_SOURCES = $(gobex_sources) $(btio_sources) \
 						tools/obex-client-tool.c
 tools_obex_client_tool_LDADD = lib/libbluetooth-internal.la \
-			       src/libshared-glib.la $(GLIB_LIBS) -lreadline
+			       src/libshared-glib.la $(GLIB_LIBS) $(READLINE_LIBS)
 
 tools_obex_server_tool_SOURCES = $(gobex_sources) $(btio_sources) \
 						tools/obex-server-tool.c
@@ -497,15 +497,15 @@ tools_obex_server_tool_LDADD = lib/libbluetooth-internal.la \
 tools_bluetooth_player_SOURCES = tools/bluetooth-player.c client/player.c
 tools_bluetooth_player_LDADD = gdbus/libgdbus-internal.la \
 				src/libshared-glib.la \
-				$(GLIB_LIBS) $(DBUS_LIBS) -lreadline
+				$(GLIB_LIBS) $(DBUS_LIBS) $(READLINE_LIBS)
 
 tools_obexctl_SOURCES = tools/obexctl.c
 tools_obexctl_LDADD = gdbus/libgdbus-internal.la src/libshared-glib.la \
-			$(GLIB_LIBS) $(DBUS_LIBS) -lreadline
+			$(GLIB_LIBS) $(DBUS_LIBS) $(READLINE_LIBS)
 
 tools_btmgmt_SOURCES = tools/btmgmt.c src/uuid-helper.c client/display.c
 tools_btmgmt_LDADD = lib/libbluetooth-internal.la src/libshared-mainloop.la \
-				-lreadline
+				$(READLINE_LIBS)
 if DEPRECATED
 noinst_PROGRAMS += attrib/gatttool
 
@@ -515,7 +515,7 @@ attrib_gatttool_SOURCES = attrib/gatttool.c attrib/att.c attrib/gatt.c \
 				attrib/utils.c src/log.c client/display.c \
 				client/display.h
 attrib_gatttool_LDADD = lib/libbluetooth-internal.la \
-			src/libshared-glib.la $(GLIB_LIBS) -lreadline
+			src/libshared-glib.la $(GLIB_LIBS) $(READLINE_LIBS)
 
 endif
 endif
@@ -561,5 +561,5 @@ tools/btpclient.$(OBJEXT): src/libshared-ell.la ell/internal
 
 tools_btpclientctl_SOURCES = tools/btpclientctl.c client/display.c
 tools_btpclientctl_LDADD = src/libshared-mainloop.la src/libshared-glib.la \
-				lib/libbluetooth-internal.la -lreadline
+				lib/libbluetooth-internal.la $(READLINE_LIBS)
 endif
diff --git a/attrib/interactive.c b/attrib/interactive.c
index 171b957..fe4f228 100644
--- a/attrib/interactive.c
+++ b/attrib/interactive.c
@@ -23,8 +23,12 @@
 #include <sys/signalfd.h>
 #include <glib.h>
 
+#ifdef HAVE_EDITLINE_READLINE
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
 #include <readline/history.h>
+#endif
 
 #include "lib/bluetooth.h"
 #include "lib/sdp.h"
@@ -922,14 +926,18 @@ static gboolean signal_handler(GIOChannel *channel, GIOCondition condition,
 
 	switch (si.ssi_signo) {
 	case SIGINT:
+#ifndef HAVE_EDITLINE_READLINE
 		rl_replace_line("", 0);
+#endif
 		rl_crlf();
 		rl_on_new_line();
 		rl_redisplay();
 		break;
 	case SIGTERM:
 		if (__terminated == 0) {
+#ifndef HAVE_EDITLINE_READLINE
 			rl_replace_line("", 0);
+#endif
 			rl_crlf();
 			g_main_loop_quit(event_loop);
 		}
@@ -999,7 +1007,9 @@ int interactive(const char *src, const char *dst,
 	signal = setup_signalfd();
 
 	rl_attempted_completion_function = commands_completion;
+#ifndef HAVE_EDITLINE_READLINE
 	rl_erase_empty_line = 1;
+#endif
 	rl_callback_handler_install(get_prompt(), parse_line);
 
 	g_main_loop_run(event_loop);
diff --git a/client/display.c b/client/display.c
index a590a13..05930e4 100644
--- a/client/display.c
+++ b/client/display.c
@@ -18,7 +18,13 @@
 #include <stdarg.h>
 #include <stdbool.h>
 #include <ctype.h>
+
+#ifdef HAVE_EDITLINE_READLINE
+#include <string.h>
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
+#endif
 
 #include "display.h"
 
@@ -30,6 +36,8 @@ static void *saved_user_data = NULL;
 void rl_printf(const char *fmt, ...)
 {
 	va_list args;
+
+#ifndef HAVE_EDITLINE_READLINE
 	bool save_input;
 	char *saved_line;
 	int saved_point;
@@ -43,11 +51,13 @@ void rl_printf(const char *fmt, ...)
 		rl_replace_line("", 0);
 		rl_redisplay();
 	}
+#endif
 
 	va_start(args, fmt);
 	vprintf(fmt, args);
 	va_end(args);
 
+#ifndef HAVE_EDITLINE_READLINE
 	if (save_input) {
 		rl_restore_prompt();
 		rl_replace_line(saved_line, 0);
@@ -55,6 +65,7 @@ void rl_printf(const char *fmt, ...)
 		rl_forced_update_display();
 		free(saved_line);
 	}
+#endif
 }
 
 void rl_hexdump(const unsigned char *buf, size_t len)
@@ -121,7 +132,9 @@ void rl_prompt_input(const char *label, const char *msg,
 								label, msg);
 	rl_set_prompt(prompt);
 
+#ifndef HAVE_EDITLINE_READLINE
 	rl_replace_line("", 0);
+#endif
 	rl_redisplay();
 }
 
@@ -136,7 +149,9 @@ int rl_release_prompt(const char *input)
 	/* This will cause rl_expand_prompt to re-run over the last prompt, but
 	 * our prompt doesn't expand anyway. */
 	rl_set_prompt(saved_prompt);
+#ifndef HAVE_EDITLINE_READLINE
 	rl_replace_line("", 0);
+#endif
 	rl_point = saved_point;
 	rl_redisplay();
 
diff --git a/configure.ac b/configure.ac
index f9f0faf..25ee38d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -302,8 +302,10 @@ AM_CONDITIONAL(CLIENT, test "${enable_client}" != "no")
 if (test "${enable_client}" != "no" || test "${enable_mesh}" = "yes"); then
         AC_CHECK_HEADERS(readline/readline.h, enable_readline=yes,
                 AC_MSG_ERROR(readline header files are required))
+        READLINE_LIBS=-lreadline
 fi
 AM_CONDITIONAL(READLINE, test "${enable_readline}" = "yes")
+AC_SUBST(READLINE_LIBS)
 
 AC_ARG_ENABLE(systemd, AS_HELP_STRING([--disable-systemd],
 		[disable systemd integration]), [enable_systemd=${enableval}])
diff --git a/src/shared/shell.c b/src/shared/shell.c
index 0639c78..93634ab 100644
--- a/src/shared/shell.c
+++ b/src/shared/shell.c
@@ -25,8 +25,12 @@
 #include <wordexp.h>
 #include <getopt.h>
 
+#ifdef HAVE_EDITLINE_READLINE
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
 #include <readline/history.h>
+#endif
 
 #include "src/shared/mainloop.h"
 #include "src/shared/timeout.h"
@@ -531,9 +535,11 @@ static int shell_exec(int argc, char *argv[])
 void bt_shell_printf(const char *fmt, ...)
 {
 	va_list args;
+#ifndef HAVE_EDITLINE_READLINE
 	bool save_input;
 	char *saved_line;
 	int saved_point;
+#endif
 
 	if (!data.input)
 		return;
@@ -545,6 +551,7 @@ void bt_shell_printf(const char *fmt, ...)
 		return;
 	}
 
+#ifndef HAVE_EDITLINE_READLINE
 	save_input = !RL_ISSTATE(RL_STATE_DONE);
 
 	if (save_input) {
@@ -555,6 +562,7 @@ void bt_shell_printf(const char *fmt, ...)
 		rl_replace_line("", 0);
 		rl_redisplay();
 	}
+#endif
 
 	va_start(args, fmt);
 	vprintf(fmt, args);
@@ -566,6 +574,7 @@ void bt_shell_printf(const char *fmt, ...)
 		va_end(args);
 	}
 
+#ifndef HAVE_EDITLINE_READLINE
 	if (save_input) {
 		if (!data.saved_prompt)
 			rl_restore_prompt();
@@ -574,6 +583,7 @@ void bt_shell_printf(const char *fmt, ...)
 		rl_forced_update_display();
 		free(saved_line);
 	}
+#endif
 }
 
 static void print_string(const char *str, void *user_data)
@@ -602,7 +612,9 @@ static void prompt_input(const char *str, bt_shell_prompt_input_func func,
 	data.saved_func = func;
 	data.saved_user_data = user_data;
 
+#ifndef HAVE_EDITLINE_READLINE
 	rl_save_prompt();
+#endif
 	bt_shell_set_prompt(str);
 }
 
@@ -662,7 +674,9 @@ int bt_shell_release_prompt(const char *input)
 
 	data.saved_prompt = false;
 
+#ifndef HAVE_EDITLINE_READLINE
 	rl_restore_prompt();
+#endif
 
 	func = data.saved_func;
 	user_data = data.saved_user_data;
@@ -903,7 +917,9 @@ static char **menu_completion(const struct bt_shell_menu_entry *entry,
 			break;
 		}
 
+#ifndef HAVE_EDITLINE_READLINE
 		rl_completion_display_matches_hook = entry->disp;
+#endif
 		matches = rl_completion_matches(text, entry->gen);
 		break;
 	}
@@ -980,7 +996,9 @@ static void signal_callback(int signum, void *user_data)
 	switch (signum) {
 	case SIGINT:
 		if (data.input && !data.mode) {
+#ifndef HAVE_EDITLINE_READLINE
 			rl_replace_line("", 0);
+#endif
 			rl_crlf();
 			rl_on_new_line();
 			rl_redisplay();
@@ -998,7 +1016,9 @@ static void signal_callback(int signum, void *user_data)
 	case SIGTERM:
 		if (!terminated) {
 			if (!data.mode) {
+#ifndef HAVE_EDITLINE_READLINE
 				rl_replace_line("", 0);
+#endif
 				rl_crlf();
 			}
 			mainloop_quit();
@@ -1062,7 +1082,9 @@ static void rl_init(void)
 	setlinebuf(stdout);
 	rl_attempted_completion_function = shell_completion;
 
+#ifndef HAVE_EDITLINE_READLINE
 	rl_erase_empty_line = 1;
+#endif
 	rl_callback_handler_install(NULL, rl_handler);
 
 	rl_init_history();
@@ -1196,7 +1218,11 @@ static void rl_cleanup(void)
 	if (data.history[0] != '\0')
 		write_history(data.history);
 
+#ifndef HAVE_EDITLINE_READLINE
 	rl_message("");
+#else
+	rl_crlf();
+#endif
 	rl_callback_handler_remove();
 }
 
diff --git a/tools/mesh-gatt/onoff-model.c b/tools/mesh-gatt/onoff-model.c
index 9dfedd8..46350a3 100644
--- a/tools/mesh-gatt/onoff-model.c
+++ b/tools/mesh-gatt/onoff-model.c
@@ -21,8 +21,14 @@
 #include <stdbool.h>
 #include <sys/uio.h>
 #include <wordexp.h>
+
+#ifdef HAVE_EDITLINE_READLINE
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
 #include <readline/history.h>
+#endif
+
 #include <glib.h>
 
 #include "src/shared/shell.h"
diff --git a/tools/mesh-gatt/prov.c b/tools/mesh-gatt/prov.c
index 1f3f62d..796de33 100644
--- a/tools/mesh-gatt/prov.c
+++ b/tools/mesh-gatt/prov.c
@@ -19,8 +19,13 @@
 #include <sys/uio.h>
 #include <wordexp.h>
 
+#ifdef HAVE_EDITLINE_READLINE
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
 #include <readline/history.h>
+#endif
+
 #include <glib.h>
 
 #include "src/shared/util.h"
diff --git a/tools/obex-client-tool.c b/tools/obex-client-tool.c
index cb0e412..f129a6d 100644
--- a/tools/obex-client-tool.c
+++ b/tools/obex-client-tool.c
@@ -22,8 +22,12 @@
 #include <errno.h>
 #include <stdio.h>
 
+#ifdef HAVE_EDITLINE_READLINE
+#include <editline/readline.h>
+#else
 #include <readline/readline.h>
 #include <readline/history.h>
+#endif
 
 #include "gobex/gobex.h"
 #include "btio/btio.h"
