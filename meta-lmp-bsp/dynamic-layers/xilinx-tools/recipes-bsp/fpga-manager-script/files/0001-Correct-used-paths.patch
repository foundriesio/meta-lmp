From 84394ab52b5eedc5c1220b7988a44db617b98691 Mon Sep 17 00:00:00 2001
From: Tim Anderson <tim.anderson@foundries.io>
Date: Fri, 22 Jan 2021 22:56:30 +0000
Subject: [PATCH] Correct used paths

This updates the utility to use paths that are correct for this
distribution.

Upstream-Status: Inappropriate [lmp specific]

Signed-off-by: Tim Anderson <tim.anderson@foundries.io>
---
 .../fpga-manager-script/files/fpgautil.c      | 57 ++++++++++---------
 1 file changed, 30 insertions(+), 27 deletions(-)

diff --git a/fpgautil.c b/fpgautil.c
index 42344d7..9136d1c 100644
--- a/fpgautil.c
+++ b/fpgautil.c
@@ -50,6 +50,11 @@
 #define READBACK     3
 #define ENCRYPTION_USERKEY_EN		(0x20U)
 
+#define LIBPATH     "/var/lib/"
+#define FWBASE      "bitstream/"
+#define FWPATH      "firmware/bitstream"
+#define CONFIGPATH "/sys/kernel/config"
+
 int fpga_getplatform()
 {
         char fpstr[100];
@@ -306,14 +311,14 @@ int main(int argc, char **argv)
 	}
 
 	if(region != NULL)
-		snprintf(folder, sizeof(folder), "/configfs/device-tree/overlays/%s", region);
+		snprintf(folder, sizeof(folder), CONFIGPATH "/device-tree/overlays/%s", region);
 	else if (!(flags & 1))
-		snprintf(folder, sizeof(folder), "/configfs/device-tree/overlays/full");
+		snprintf(folder, sizeof(folder), CONFIGPATH "/device-tree/overlays/full");
 	else if (overlay != NULL) {
 		printf("Error: Provide valid Overlay region info\n\r");
 		return 1;
 	}
-	system("mkdir -p /lib/firmware");
+	system("mkdir -p "LIBPATH FWPATH);
 	if (rm_overlay) {
 		if (((stat(folder, &sb) == 0) && S_ISDIR(sb.st_mode))) {
 			snprintf(command, sizeof(command), "rmdir %s", folder);
@@ -327,21 +332,21 @@ int main(int argc, char **argv)
 			printf("Error: Overlay already exists in the live tree\n\r");
 			return 1;
 		}
-		snprintf(command, sizeof(command), "cp %s /lib/firmware", binfile);
+		snprintf(command, sizeof(command), "cp %s "LIBPATH FWPATH, binfile);
 		if (argc < 5) {
 			printf("\n\r");
 			printf("%s: For more information run %s -h\n", strerror(22), basename(argv[0]));
 			return 1;
 		}
 		
-		if (((stat("/configfs/device-tree/", &sb) == 0) && S_ISDIR(sb.st_mode))) {
+		if (((stat(CONFIGPATH "/device-tree/", &sb) == 0) && S_ISDIR(sb.st_mode))) {
 		} else {
-			system("mkdir /configfs");
-			system("mount -t configfs configfs /configfs");
+			system("mkdir "CONFIGPATH);
+			system("mount -t configfs configfs "CONFIGPATH);
 		}
-		snprintf(command, sizeof(command), "cp %s /lib/firmware", binfile);
+		snprintf(command, sizeof(command), "cp %s "LIBPATH FWPATH, binfile);
 		system(command);
-		snprintf(command, sizeof(command), "cp %s /lib/firmware", overlay);
+		snprintf(command, sizeof(command), "cp %s "LIBPATH FWPATH, overlay);
 		system(command);
 		tmp = strdup(overlay);
 		while((token = strsep(&tmp, "/"))) {
@@ -363,13 +368,13 @@ int main(int argc, char **argv)
 		time = gettime(t0, t1);
 
 		/* Delete Bin file and DTBO file*/
-		snprintf(command, sizeof(command), "rm /lib/firmware/%s", tmp1);
+		snprintf(command, sizeof(command), "rm "LIBPATH FWPATH, tmp1);
 		system(command);
 		tmp = strdup(binfile);
 		while((token = strsep(&tmp, "/"))) {
 			tmp1 = token;
 		}
-		snprintf(command, sizeof(command), "rm /lib/firmware/%s", tmp1);
+		snprintf(command, sizeof(command), "rm "LIBPATH FWPATH, tmp1);
 		system(command);
 
 		/* FPGA state check */
@@ -384,7 +389,7 @@ int main(int argc, char **argv)
 			printf("%s: For more information run %s -h\n", strerror(22), basename(argv[0]));
 			return 1;
 		}
-		snprintf(command, sizeof(command), "cp %s /lib/firmware", binfile);
+		snprintf(command, sizeof(command), "cp %s "LIBPATH FWPATH, binfile);
 		system(command);
 		snprintf(command, sizeof(command), "echo %x > /sys/class/fpga_manager/fpga0/flags", flags);
 		system(command);
@@ -403,7 +408,7 @@ int main(int argc, char **argv)
 		time = gettime(t0, t1);
 
 		/* Delete Bin file and DTBO file*/
-		snprintf(command, sizeof(command), "rm /lib/firmware/%s", tmp1);
+		snprintf(command, sizeof(command), "rm "LIBPATH FWPATH, tmp1);
 		system(command);
 
 		/* FPGA state check */
